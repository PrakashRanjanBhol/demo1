// theme-toggle.component.ts
import { Component, EventEmitter, Input, Output } from '@angular/core';

@Component({
  selector: 'app-theme-toggle',
  template: `
    <div class="toggle-container">
      <span class="theme-label">Light</span>
      
      <div class="toggle-switch" (click)="toggleTheme()" [class.dark]="isDarkMode">
        <div class="toggle-slider">
          <i class="pi pi-sun sun-icon"></i>
          <i class="pi pi-moon moon-icon"></i>
        </div>
      </div>
      
      <span class="theme-label">Dark</span>
    </div>
  `,
  styles: [`
    .toggle-container {
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 1rem;
      margin-bottom: 2rem;
    }

    .theme-label {
      font-size: 1.1rem;
      font-weight: 600;
      color: rgba(255, 255, 255, 0.9);
      text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
      transition: all 0.3s ease;
    }

    .toggle-switch {
      position: relative;
      width: 70px;
      height: 36px;
      background: rgba(255, 255, 255, 0.2);
      border-radius: 50px;
      cursor: pointer;
      transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
      border: 2px solid rgba(255, 255, 255, 0.3);
      backdrop-filter: blur(10px);
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
    }

    .toggle-switch.dark {
      background: rgba(30, 41, 59, 0.8);
      border-color: rgba(148, 163, 184, 0.3);
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
    }

    .toggle-switch:hover {
      transform: scale(1.05);
      box-shadow: 0 12px 40px rgba(0, 0, 0, 0.2);
    }

    .toggle-slider {
      position: absolute;
      top: 2px;
      left: 2px;
      width: 30px;
      height: 30px;
      background: linear-gradient(135deg, #ffd89b 0%, #19547b 100%);
      border-radius: 50%;
      transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
      display: flex;
      align-items: center;
      justify-content: center;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    }

    .toggle-switch.dark .toggle-slider {
      transform: translateX(34px);
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4);
    }

    .sun-icon {
      font-size: 16px;
      color: #FFA500;
      opacity: 1;
      transform: rotate(0deg);
      transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
      text-shadow: 0 0 8px rgba(255, 165, 0, 0.5);
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%) rotate(0deg);
    }

    .moon-icon {
      font-size: 16px;
      color: #E2E8F0;
      opacity: 0;
      transform: translate(-50%, -50%) rotate(180deg);
      transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
      text-shadow: 0 0 8px rgba(226, 232, 240, 0.3);
      position: absolute;
      top: 50%;
      left: 50%;
    }

    .toggle-switch.dark .sun-icon {
      opacity: 0;
      transform: translate(-50%, -50%) rotate(-180deg);
    }

    .toggle-switch.dark .moon-icon {
      opacity: 1;
      transform: translate(-50%, -50%) rotate(0deg);
    }
  `]
})
export class ThemeToggleComponent {
  @Input() isDarkMode: boolean = false;
  @Output() themeToggled = new EventEmitter<boolean>();

  toggleTheme(): void {
    this.isDarkMode = !this.isDarkMode;
    this.themeToggled.emit(this.isDarkMode);
    
    // Add vibration effect on mobile devices
    if (navigator.vibrate) {
      navigator.vibrate(50);
    }
  }
}

// Usage in parent component:
/*
// app.component.ts
import { Component } from '@angular/core';

@Component({
  selector: 'app-root',
  template: `
    <div class="container" [class.dark]="isDarkMode">
      <h1 class="title">Theme Toggle Demo</h1>
      
      <app-theme-toggle 
        [isDarkMode]="isDarkMode"
        (themeToggled)="onThemeToggled($event)">
      </app-theme-toggle>
    </div>
  `
})
export class AppComponent {
  isDarkMode = false;

  onThemeToggled(isDark: boolean): void {
    this.isDarkMode = isDark;
    // Apply theme to document body or use a theme service
    document.body.classList.toggle('dark', isDark);
  }
}
*/

// Don't forget to:
// 1. Install PrimeNG: npm install primeng
// 2. Install PrimeIcons: npm install primeicons
// 3. Add to angular.json styles array: "node_modules/primeicons/primeicons.css"
// 4. Import the component in your module
