<div class="multi-toggle-container">
  <div class="multi-switch" [style.--count]="options.length">
    <!-- Sliding background -->
    <div
      class="highlight"
      [style.transform]="'translateX(' + (100 / options.length) * options.indexOf(selectedOption) + '%)'"
      [style.width]="100 / options.length + '%'"
    ></div>

    <!-- Render 5 toggle options -->
    <ng-container *ngFor="let option of options; let i = index">
      <input
        type="radio"
        [id]="'switch' + i"
        name="multiSwitch"
        [value]="option"
        [checked]="selectedOption === option"
        (change)="toggleOption(option)"
      />
      <label [for]="'switch' + i">{{ option }}</label>
    </ng-container>
  </div>
</div>












.multi-toggle-container {
  display: flex;
  justify-content: center;
  margin: 1rem 0;
}

.multi-switch {
  --count: 5; /* fallback */
  position: relative;
  display: grid;
  grid-template-columns: repeat(var(--count), 1fr);
  width: 100%;
  max-width: 900px;
  background: #1f1f1f; /* dark theme bg */
  border-radius: 2rem;
  overflow: hidden;
  font-size: 0.85rem;
  box-shadow: 0 2px 6px rgba(0,0,0,0.2);
}

/* hide inputs */
.multi-switch input[type='radio'] {
  display: none;
}

/* label styles */
.multi-switch label {
  text-align: center;
  padding: 0.75rem 0.5rem;
  color: #f0f0f0;
  cursor: pointer;
  z-index: 2;
  position: relative;
  transition: color 0.2s ease;
  user-select: none;
}

/* pill-like sliding highlight */
.highlight {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  background-color: #ffcc00;
  border-radius: 2rem;
  z-index: 1;
  transition: transform 0.3s ease;
}
