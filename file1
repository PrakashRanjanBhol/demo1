private updateChart(grouped: Record<string, number>, overallTotal: number) {
  this.totalLines = overallTotal;

  this.chartOption = {
    backgroundColor: '#111113',
    tooltip: {
      trigger: 'axis',
      axisPointer: { type: 'shadow' },
      backgroundColor: '#1e1e1e',
      borderColor: '#333',
      textStyle: { color: '#fff' },
      formatter: (params: any) => {
        let tooltip = '';
        params.forEach((p: any) => {
          tooltip += `${p.marker} ${p.name}: ${p.value.toLocaleString()} lines<br/>`;
        });
        return tooltip;
      },
    },
    legend: {
      bottom: 0, // legend below graph
      textStyle: { color: '#ffffff' },
      data: Object.keys(grouped), // show each language in legend
    },
    grid: {
      top: 40,
      left: '3%',
      right: '3%',
      bottom: 60, // more space for legend + x-axis labels
      containLabel: true,
    },
    xAxis: {
      type: 'category',
      data: Object.keys(grouped), // language names as x-axis labels
      axisLine: { lineStyle: { color: '#aaa' } },
      axisLabel: { color: '#fff' },
    },
    yAxis: {
      type: 'value',
      axisLine: { lineStyle: { color: '#aaa' } },
      axisLabel: { color: '#fff' },
      splitLine: { lineStyle: { color: '#333' } },
    },
    series: [
      {
        name: 'Lines of Code',
        type: 'bar',
        barWidth: '40%',
        data: Object.entries(grouped).map(([name, value]) => ({
          name,
          value,
        })),
        label: {
          show: true,
          position: 'top',
          color: '#fff',
        },
        // Removed borderRadius here
      },
    ],
  };
}
