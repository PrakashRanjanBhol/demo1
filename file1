<div class="tree-section-label">
                        <div class="tree-parent-node">
                            <span class="node-dot"></span>
                            <span class="node-label">{{ section.title }}</span>
                        </div>
                    </div>

                    <div class="project-list tree-style">
                        <div *ngFor="let proj of section.list" class="project-item tree-node" [ngClass]="{
    'fav-dot': proj.isFavourite,
    'non-fav-dot': !proj.isFavourite && section.key === 'all',
    'blink-dot': isFavouriteLoading(proj.id)
  }" [class.loading]="isFavouriteLoading(proj.id) || isLoading(proj.id)" [class.favourited]="animateMap[proj.id]">

                            <div class="project-left"
                                (click)="section.key === 'fav' ? onFavouriteProjectClick(proj) : null">
                                <div class="animated-avatar" [ngClass]="'avatar-' + (proj.id % 6)">
                                    {{ proj.name.charAt(0).toUpperCase() }}
                                </div>





/* ===== Tree-Style Project List ===== */
.project-list.tree-style {
  position: relative;
  margin-left: 24px; /* spacing for vertical line */
  padding-left: 12px;
  border-left: 2px solid #555; /* vertical connector */
}

/* Each node (project card) */
.project-list.tree-style .tree-node {
  position: relative;
  margin-bottom: 14px;
}

/* Horizontal connector from vertical line */
.project-list.tree-style .tree-node::before {
  content: '';
  position: absolute;
  top: 50%;
  left: -12px; /* connects from vertical line to card */
  width: 12px;
  height: 2px;
  background-color: #777;
  transform: translateY(-50%);
}

/* Connector Dot (default style) */
.project-list.tree-style .tree-node::after {
  content: '';
  position: absolute;
  left: -15px;
  top: 50%;
  width: 6px;
  height: 6px;
  border-radius: 50%;
  transform: translateY(-50%);
  transition: background-color 0.3s ease, box-shadow 0.3s ease;
}

/* Non-Favourite Projects in All Projects (Gray Dot) */
.project-list.tree-style .tree-node.non-fav-dot::after {
  background-color: #666;
  box-shadow: none;
}

/* Favourite Projects in All or Favourite Section (Yellow Dot) */
.project-list.tree-style .tree-node.fav-dot::after {
  background-color: #ffc107;
  box-shadow: 0 0 4px rgba(255, 193, 7, 0.5);
}


/* Pulse animation around the dot */
@keyframes dotPulse {
  0% {
    box-shadow: 0 0 0 0 rgba(255, 193, 7, 0.5);
    transform: scale(1);
  }
  70% {
    box-shadow: 0 0 0 8px rgba(255, 193, 7, 0);
    transform: scale(1.2);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(255, 193, 7, 0);
    transform: scale(1);
  }
}

/* Apply the pulse animation when loading */
.project-list.tree-style .tree-node.blink-dot::after {
  animation: dotPulse 1s ease-out infinite;
  background-color: #ffc107 !important;
  z-index: 2;
}

.tree-section-label {
  margin-left: 24px;
  padding-left: 12px;
}

.tree-parent-node {
  display: flex;
  align-items: center;
  gap: 10px;
  margin-bottom: 14px;
  animation: parentNodeEnter 0.5s ease-out;
  position: relative;
}

/* Glowing blinking dot */
.tree-parent-node .node-dot {
  width: 10px;
  height: 10px;
  background-color: #ffc107;
  border-radius: 50%;
  animation: glowPulse 1.4s ease-out infinite;
  box-shadow: 0 0 0 rgba(255, 193, 7, 0.4);
}

/* Section label text */
.tree-parent-node .node-label {
  font-size: 0.95rem;
  font-weight: 600;
  color: #ffc107;
  text-shadow: 0 0 4px rgba(255, 193, 7, 0.25);
  letter-spacing: 0.4px;
  opacity: 0.95;
}

@keyframes glowPulse {
  0% {
    box-shadow: 0 0 0 0 rgba(255, 193, 7, 0.4);
    transform: scale(1);
  }
  70% {
    box-shadow: 0 0 10px 5px rgba(255, 193, 7, 0.15);
    transform: scale(1.15);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(255, 193, 7, 0);
    transform: scale(1);
  }
}

@keyframes parentNodeEnter {
  0% {
    opacity: 0;
    transform: translateY(-10px) scale(0.95);
  }
  100% {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}


.animated-avatar {
  width: 26px;
  height: 26px;
  border-radius: 50%;
  font-size: 0.75rem;
  font-weight: 600;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #111;
  animation: floatY 4s ease-in-out infinite, pulseSoft 3s ease-in-out infinite;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

/* Floating animation */
@keyframes floatY {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-1.5px);
  }
}

/* Soft pulse glow */
@keyframes pulseSoft {
  0%, 100% {
    box-shadow: 0 0 6px rgba(255, 255, 255, 0.08);
  }
  50% {
    box-shadow: 0 0 12px rgba(255, 255, 255, 0.15);
  }
}

/* ==== Color Variants (Dark Theme Friendly) ==== */
.avatar-0 {
  background-color: #ffc107;
  color: #111;
}
.avatar-1 {
  background-color: #42a5f5; /* soft blue */
  color: #fff;
}
.avatar-2 {
  background-color: #66bb6a; /* soft green */
  color: #fff;
}
.avatar-3 {
  background-color: #ef5350; /* soft red */
  color: #fff;
}
.avatar-4 {
  background-color: #ab47bc; /* soft purple */
  color: #fff;
}
.avatar-5 {
  background-color: #ffa726; /* orange */
  color: #111;
}
