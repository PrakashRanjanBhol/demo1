import { Component } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';

interface Task {
  id: number;
  title: string;
  description: string;
  created: string;
  active: boolean;
}

@Component({
  selector: 'app-sidebar',
  standalone: true,
  imports: [CommonModule, FormsModule],
  templateUrl: './sidebar.component.html',
  styleUrls: ['./sidebar.component.css']
})
export class SidebarComponent {
  tasks: Task[] = [];
  showForm = false;
  
  newTask = {
    title: '',
    description: ''
  };

  showTaskForm(): void {
    this.showForm = true;
  }

  closeTaskForm(): void {
    this.showForm = false;
    this.resetForm();
  }

  createTask(): void {
    if (this.newTask.title.trim()) {
      const task: Task = {
        id: Date.now(),
        title: this.newTask.title,
        description: this.newTask.description,
        created: new Date().toLocaleDateString('en-US', { 
          month: 'short', 
          day: 'numeric', 
          year: 'numeric' 
        }),
        active: false
      };

      this.tasks.unshift(task);
      this.resetForm();
      this.closeTaskForm();
    }
  }

  resetForm(): void {
    this.newTask = {
      title: '',
      description: ''
    };
  }

  toggleTaskActive(taskId: number): void {
    const task = this.tasks.find(t => t.id === taskId);
    if (task) {
      task.active = !task.active;
    }
  }

  manageTask(event: Event, taskId: number): void {
    event.stopPropagation();
    alert(`Managing task ${taskId}\n\nYou can add edit/delete functionality here!`);
  }
}













<div class="sidebar">
  <div class="sidebar-header">
    <h1>Software Development Life Cycle (SDLC) Creation</h1>
  </div>
  
  <div class="sidebar-content">
    <button class="plan-task-btn" (click)="showTaskForm()" *ngIf="!showForm">
      <span>
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.5">
          <line x1="12" y1="5" x2="12" y2="19"></line>
          <line x1="5" y1="12" x2="19" y2="12"></line>
        </svg>
        Plan Task
      </span>
    </button>

    <div class="task-form-container" [class.show]="showForm">
      <div class="task-form">
        <div class="form-header">
          <h3>New Task</h3>
          <button class="close-btn" (click)="closeTaskForm()" type="button">&times;</button>
        </div>
        
        <form (ngSubmit)="createTask()" #taskForm="ngForm">
          <div class="form-group">
            <label for="taskTitle">Task Title</label>
            <input 
              type="text" 
              id="taskTitle" 
              [(ngModel)]="newTask.title"
              name="title"
              placeholder="Enter task title" 
              required>
          </div>
          
          <div class="form-group">
            <label for="taskDescription">Description</label>
            <textarea 
              id="taskDescription" 
              [(ngModel)]="newTask.description"
              name="description"
              placeholder="Describe your task in detail"></textarea>
          </div>
          
          <button type="submit" class="submit-btn" [disabled]="!taskForm.valid">
            Create Task
          </button>
        </form>
      </div>
    </div>

    <div class="tasks-section">
      <div class="section-header">
        <h3>Your Tasks</h3>
        <span class="task-count">{{ tasks.length }}</span>
      </div>
      
      <div class="tasks-list">
        <div class="empty-state" *ngIf="tasks.length === 0">
          <div class="empty-state-icon">ðŸ“‹</div>
          <h4>No tasks yet</h4>
          <p>Click "Plan Task" to create your first task</p>
        </div>

        <div 
          class="task-card" 
          *ngFor="let task of tasks"
          [class.active]="task.active"
          (click)="toggleTaskActive(task.id)">
          
          <div class="status-indicator"></div>
          
          <div class="task-card-content">
            <div class="task-header">
              <div class="task-title">{{ task.title }}</div>
              <div class="task-actions">
                <div class="manage-icon" (click)="manageTask($event, task.id)">
                  <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path>
                    <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>
                  </svg>
                </div>
              </div>
            </div>
            
            <div class="task-description">
              {{ task.description || 'No description provided' }}
            </div>
            
            <div class="task-meta">
              <div class="task-date">
                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
                  <line x1="16" y1="2" x2="16" y2="6"></line>
                  <line x1="8" y1="2" x2="8" y2="6"></line>
                  <line x1="3" y1="10" x2="21" y2="10"></line>
                </svg>
                {{ task.created }}
              </div>
              <div class="task-badge">{{ task.active ? 'In Progress' : 'Active' }}</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
















* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

.sidebar {
    width: 320px;
    background-color: #1a1a1d;
    display: flex;
    flex-direction: column;
    height: 100vh;
}

.sidebar-header {
    padding: 20px 18px;
    border-bottom: 1px solid rgba(139, 92, 246, 0.15);
    background-color: #1a1a1d;
}

.sidebar-header h1 {
    font-size: 1.0625rem;
    font-weight: 700;
    background: linear-gradient(135deg, #6366f1, #8b5cf6);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    line-height: 1.4;
    letter-spacing: -0.02em;
}

.sidebar-content {
    padding: 18px;
    overflow-y: auto;
    flex: 1;
}

.plan-task-btn {
    width: 100%;
    padding: 12px 18px;
    background: linear-gradient(135deg, #6366f1, #8b5cf6);
    border: none;
    border-radius: 10px;
    color: white;
    font-size: 0.875rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s ease;
}

.plan-task-btn span {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 6px;
}

.plan-task-btn:hover {
    opacity: 0.9;
}

.task-form-container {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease;
    margin-top: 0;
}

.task-form-container.show {
    max-height: 500px;
    margin-top: 18px;
}

.task-form {
    background-color: #232326;
    border-radius: 12px;
    padding: 18px;
    border: 1px solid rgba(139, 92, 246, 0.2);
}

.form-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 16px;
}

.form-header h3 {
    font-size: 0.9375rem;
    font-weight: 600;
    background: linear-gradient(135deg, #6366f1, #8b5cf6);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
}

.close-btn {
    background: rgba(139, 92, 246, 0.1);
    border: 1px solid rgba(139, 92, 246, 0.2);
    color: #a78bfa;
    cursor: pointer;
    font-size: 18px;
    width: 28px;
    height: 28px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 7px;
    transition: all 0.2s;
}

.close-btn:hover {
    background: linear-gradient(135deg, #6366f1, #8b5cf6);
    color: white;
}

.form-group {
    margin-bottom: 16px;
}

.form-group label {
    display: block;
    margin-bottom: 6px;
    font-size: 0.75rem;
    font-weight: 600;
    color: #a78bfa;
    text-transform: uppercase;
    letter-spacing: 0.05em;
}

.form-group input,
.form-group textarea {
    width: 100%;
    padding: 10px 12px;
    background-color: #1a1a1d;
    border: 1px solid rgba(139, 92, 246, 0.2);
    border-radius: 8px;
    color: #e4e4e7;
    font-size: 0.875rem;
    font-family: inherit;
    transition: all 0.2s;
}

.form-group input:focus,
.form-group textarea:focus {
    outline: none;
    border-color: #8b5cf6;
}

.form-group textarea {
    resize: vertical;
    min-height: 70px;
}

.submit-btn {
    width: 100%;
    padding: 10px 16px;
    background: linear-gradient(135deg, #6366f1, #8b5cf6);
    border: none;
    border-radius: 8px;
    color: white;
    font-size: 0.875rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s;
    margin-top: 6px;
}

.submit-btn:hover:not(:disabled) {
    opacity: 0.9;
}

.submit-btn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

.tasks-section {
    margin-top: 24px;
}

.section-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 12px;
    padding-bottom: 10px;
    border-bottom: 1px solid rgba(139, 92, 246, 0.1);
}

.section-header h3 {
    font-size: 0.75rem;
    font-weight: 600;
    color: #a78bfa;
    text-transform: uppercase;
    letter-spacing: 0.05em;
}

.task-count {
    background: linear-gradient(135deg, #6366f1, #8b5cf6);
    color: white;
    padding: 4px 10px;
    border-radius: 10px;
    font-size: 0.6875rem;
    font-weight: 700;
}

.tasks-list {
    display: flex;
    flex-direction: column;
    gap: 10px;
}

.task-card {
    background-color: #232326;
    border: 1px solid rgba(139, 92, 246, 0.2);
    border-radius: 10px;
    padding: 14px;
    transition: all 0.2s ease;
    cursor: pointer;
    position: relative;
}

.task-card.active {
    background: linear-gradient(135deg, rgba(99, 102, 241, 0.12), rgba(139, 92, 246, 0.12));
    border-color: rgba(139, 92, 246, 0.5);
    box-shadow: 0 0 20px rgba(99, 102, 241, 0.2);
}

.task-card:hover {
    border-color: rgba(139, 92, 246, 0.4);
}

.task-card-content {
    position: relative;
}

.status-indicator {
    position: absolute;
    top: 14px;
    right: 14px;
    width: 8px;
    height: 8px;
    background: linear-gradient(135deg, #6366f1, #8b5cf6);
    border-radius: 50%;
    opacity: 0;
    transition: opacity 0.2s;
}

.task-card.active .status-indicator {
    opacity: 1;
    animation: blink 2s ease-in-out infinite;
}

@keyframes blink {
    0%, 100% {
        opacity: 1;
        box-shadow: 0 0 8px rgba(99, 102, 241, 0.6), 0 0 16px rgba(139, 92, 246, 0.4);
    }
    50% {
        opacity: 0.3;
        box-shadow: 0 0 4px rgba(99, 102, 241, 0.3), 0 0 8px rgba(139, 92, 246, 0.2);
    }
}

.task-header {
    display: flex;
    justify-content: space-between;
    align-items: start;
    margin-bottom: 8px;
}

.task-title {
    font-size: 0.9375rem;
    font-weight: 600;
    color: #fafafa;
    line-height: 1.4;
    flex: 1;
    margin-right: 8px;
}

.task-actions {
    opacity: 0;
    transition: opacity 0.2s ease;
}

.task-card:hover .task-actions {
    opacity: 1;
}

.manage-icon {
    width: 28px;
    height: 28px;
    background: linear-gradient(135deg, #6366f1, #8b5cf6);
    border-radius: 7px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.2s;
}

.manage-icon:hover {
    opacity: 0.9;
}

.manage-icon svg {
    width: 16px;
    height: 16px;
    stroke: white;
    stroke-width: 2;
}

.task-description {
    color: #a1a1aa;
    font-size: 0.8125rem;
    line-height: 1.5;
    margin-bottom: 12px;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
}

.task-meta {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding-top: 10px;
    border-top: 1px solid rgba(139, 92, 246, 0.1);
}

.task-date {
    display: flex;
    align-items: center;
    gap: 5px;
    font-size: 0.6875rem;
    color: #71717a;
}

.task-date svg {
    width: 12px;
    height: 12px;
    opacity: 0.6;
}

.task-badge {
    padding: 3px 8px;
    background: rgba(99, 102, 241, 0.15);
    border: 1px solid rgba(139, 92, 246, 0.3);
    border-radius: 6px;
    font-size: 0.625rem;
    font-weight: 600;
    color: #a78bfa;
    text-transform: uppercase;
    letter-spacing: 0.05em;
}

.empty-state {
    text-align: center;
    padding: 50px 16px;
    color: #71717a;
}

.empty-state-icon {
    font-size: 48px;
    margin-bottom: 16px;
    opacity: 0.5;
}

.empty-state h4 {
    font-size: 0.9375rem;
    color: #a78bfa;
    margin-bottom: 6px;
}

.empty-state p {
    font-size: 0.8125rem;
    color: #71717a;
}

::-webkit-scrollbar {
    width: 6px;
}

::-webkit-scrollbar-track {
    background: transparent;
}

::-webkit-scrollbar-thumb {
    background: linear-gradient(180deg, #6366f1, #8b5cf6);
    border-radius: 3px;
}

::-webkit-scrollbar-thumb:hover {
    background: linear-gradient(180deg, #7c3aed, #a78bfa);
}

@keyframes slideIn {
    from {
        opacity: 0;
        transform: translateY(-10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.task-card {
    animation: slideIn 0.3s ease-out;
}


