<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Simple Download Icon</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            padding: 50px;
            background-color: #f5f5f5;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
        }

        .download-icon {
            font-size: 24px;
            color: #007bff;
            cursor: pointer;
            transition: color 0.3s ease;
        }

        .download-icon:hover {
            color: #0056b3;
        }

        .download-icon.loading {
            cursor: not-allowed;
        }

        .spinner {
            border: 2px solid #f3f3f3;
            border-top: 2px solid #007bff;
            border-radius: 50%;
            width: 24px;
            height: 24px;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% {
                transform: rotate(0deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }

        .success-icon {
            color: #28a745;
            font-size: 24px;
        }

        .error-icon {
            color: #dc3545;
            font-size: 24px;
        }

        .status-message {
            display: flex;
            align-items: center;
            gap: 8px;
            font-size: 14px;
        }

        .status-message.success {
            color: #28a745;
        }

        .status-message.error {
            color: #dc3545;
        }
    </style>
</head>

<body>
    <div id="downloadIcon" class="download-icon">
        <i class="fas fa-download"></i>
    </div>

    <script>
        function createDownloadIcon() {
            const iconElement = document.getElementById('downloadIcon');

            iconElement.addEventListener('click', async function () {
                // Don't allow clicking while loading
                if (this.classList.contains('loading')) return;

                // Add loading class and show spinner
                this.classList.add('loading');
                showSpinner(this);

                try {
                    // Simulate download (replace with your actual download logic)
                    await simulateDownload();

                    // Show success message
                    showSuccess(this);

                    // Restore icon after 10 seconds
                    setTimeout(() => {
                        restoreOriginalIcon(this);
                        this.classList.remove('loading');
                    }, 10000);

                } catch (error) {
                    // Show error message
                    showError(this);

                    // Restore icon after 10 seconds
                    setTimeout(() => {
                        restoreOriginalIcon(this);
                        this.classList.remove('loading');
                    }, 10000);
                }
            });
        }

        function showSpinner(element) {
            // Store original content
            element.dataset.originalContent = element.innerHTML;

            // Create and show spinner
            const spinner = document.createElement('div');
            spinner.className = 'spinner';

            element.innerHTML = '';
            element.appendChild(spinner);
        }

        function showSuccess(element) {
            // Create success message
            const statusDiv = document.createElement('div');
            statusDiv.className = 'status-message success';

            const tickIcon = document.createElement('i');
            tickIcon.className = 'fas fa-check success-icon';

            const message = document.createElement('span');
            message.textContent = 'Downloaded Successfully';

            statusDiv.appendChild(tickIcon);
            statusDiv.appendChild(message);

            element.innerHTML = '';
            element.appendChild(statusDiv);
        }

        function showError(element) {
            // Create error message
            const statusDiv = document.createElement('div');
            statusDiv.className = 'status-message error';

            const errorIcon = document.createElement('i');
            errorIcon.className = 'fas fa-times error-icon';

            const message = document.createElement('span');
            message.textContent = 'Download Failed';

            statusDiv.appendChild(errorIcon);
            statusDiv.appendChild(message);

            element.innerHTML = '';
            element.appendChild(statusDiv);
        }

        function restoreOriginalIcon(element) {
            // Restore original icon
            element.innerHTML = element.dataset.originalContent;
        }

        // Simulate download - replace with your actual download function
        async function simulateDownload() {
            return new Promise((resolve, reject) => {
                setTimeout(() => {
                    // Simulate 30% chance of failure for demo
                    if (Math.random() < 0.3) {
                        reject(new Error('Download failed'));
                    } else {
                        resolve();
                    }
                }, 2000); // 2 second delay for demo
            });
        }

        // Initialize
        createDownloadIcon();
    </script>
</body>

</html>
