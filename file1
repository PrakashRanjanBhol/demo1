import { Component, Input, Output, EventEmitter, ViewChild, ElementRef, AfterViewInit } from '@angular/core';

@Component({
  selector: 'app-assistance-toggle-switch',
  templateUrl: './assistance-toggle.component.html',
  styleUrls: ['./assistance-toggle.component.css']
})
export class AssistanceToggleSwitchComponent implements AfterViewInit {
  @Input() selectedAssistanceToggleType: string = 'General';
  @Output() assistanceToggleTypeChange = new EventEmitter<string>();
  @ViewChild('scrollWrapper') scrollWrapper!: ElementRef;

  options = ['General', 'Code RAG', 'Jira', 'Confluence', 'Reusable Components'];

  ngAfterViewInit() {
    // Scroll the active item into view on init
    setTimeout(() => {
      this.scrollToActive();
    }, 100);
  }

  assistanceToggleSwitch(option: string) {
    this.assistanceToggleTypeChange.emit(option);
    this.scrollToActive();
  }

  private scrollToActive() {
    if (this.scrollWrapper) {
      const container = this.scrollWrapper.nativeElement;
      const activeButton = container.querySelector('.toggle-button.active');
      
      if (activeButton) {
        const containerRect = container.getBoundingClientRect();
        const buttonRect = activeButton.getBoundingClientRect();
        const scrollLeft = activeButton.offsetLeft - (containerRect.width / 2) + (buttonRect.width / 2);
        
        container.scrollTo({
          left: scrollLeft,
          behavior: 'smooth'
        });
      }
    }
  }
}










<div class="scroll-container">
  <div class="fade-left"></div>
  <div class="toggle-scroll-wrapper" #scrollWrapper>
    <div
      *ngFor="let option of options"
      class="toggle-button"
      [class.active]="selectedAssistanceToggleType === option"
      (click)="assistanceToggleSwitch(option)"
    >
      {{ option }}
    </div>
  </div>
  <div class="fade-right"></div>
</div>










.scroll-container {
  position: relative;
  max-width: 100%;
  overflow: hidden;
}

.toggle-scroll-wrapper {
  display: flex;
  gap: 0.5rem;
  overflow-x: auto;
  overflow-y: hidden;
  padding: 0.5rem 1rem;
  background-color: #1a1a1d;
  border-radius: 2rem;
  border: 1px solid #27272a;
  scroll-behavior: smooth;
  -webkit-overflow-scrolling: touch;
  scrollbar-width: none; /* Firefox */
  -ms-overflow-style: none; /* IE and Edge */
}

/* Hide scrollbar for Chrome, Safari and Opera */
.toggle-scroll-wrapper::-webkit-scrollbar {
  display: none;
}

.toggle-button {
  flex: 0 0 auto;
  text-align: center;
  padding: 0.3rem 1rem;
  color: #e0e0e0;
  border-radius: 2rem;
  cursor: pointer;
  transition: all 0.3s ease;
  user-select: none;
  font-size: 0.7rem;
  white-space: nowrap;
  background-color: #3b3b3b;
}

.toggle-button:hover {
  background-color: #4a4a4a;
  transform: translateY(-1px);
}

.toggle-button.active {
  background: linear-gradient(135deg, #6366f1, #8b5cf6);
  color: #FFF;
  font-weight: 600;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
}

/* Fade edges */
.fade-left,
.fade-right {
  position: absolute;
  top: 0;
  bottom: 0;
  width: 3rem;
  pointer-events: none;
  z-index: 1;
  transition: opacity 0.3s ease;
}

.fade-left {
  left: 0;
  background: linear-gradient(to right, rgba(26, 26, 29, 1) 0%, rgba(26, 26, 29, 0) 100%);
}

.fade-right {
  right: 0;
  background: linear-gradient(to left, rgba(26, 26, 29, 1) 0%, rgba(26, 26, 29, 0) 100%);
}





