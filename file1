import { Component, AfterViewInit, ElementRef, ViewChild } from '@angular/core';

@Component({
  selector: 'app-download-card',
  template: `<div #container></div>`, // target container
  styles: [] // you can keep the CSS in your global or component stylesheet
})
export class DownloadCardComponent implements AfterViewInit {
  @ViewChild('container', { static: true }) container!: ElementRef;

  ngAfterViewInit(): void {
    // Create main card
    const card = document.createElement('div');
    card.className = 'download-card';

    // Create info section
    const info = document.createElement('div');
    info.className = 'download-info';

    const infoIcon = document.createElement('i');
    infoIcon.className = 'pi pi-info-circle info-icon';
    info.appendChild(infoIcon);

    const textDiv = document.createElement('div');

    const title = document.createElement('h4');
    title.textContent = 'Your Draw.io file is ready!';
    textDiv.appendChild(title);

    const desc = document.createElement('p');
    desc.textContent =
      'This file can be imported into a Confluence page to create or update diagrams. Download it and use it to visually represent your workflow or architecture.';
    textDiv.appendChild(desc);

    // Step-by-step guide
    const steps = [
      'Click the download button to save the Draw.io file.',
      'Open your Confluence page where you want the diagram.',
      'Insert a Draw.io diagram macro in Confluence.',
      'Choose "Import Diagram" and select the downloaded file.',
      'Edit and save your diagram as needed.'
    ];

    const ol = document.createElement('ol');
    ol.className = 'download-steps';

    steps.forEach((stepText, index) => {
      const li = document.createElement('li');

      const stepNumber = document.createElement('span');
      stepNumber.className = 'step-number';
      stepNumber.textContent = (index + 1).toString();

      const stepContent = document.createTextNode(stepText);

      li.appendChild(stepNumber);
      li.appendChild(stepContent);
      ol.appendChild(li);
    });

    textDiv.appendChild(ol);
    info.appendChild(textDiv);
    card.appendChild(info);

    // Download button
    const button = document.createElement('button');
    button.className = 'modern-download-icon-btn';
    button.type = 'button';
    button.addEventListener('click', () => this.downloadFile());

    const btnIcon = document.createElement('i');
    btnIcon.className = 'pi pi-download';
    button.appendChild(btnIcon);

    card.appendChild(button);

    // Append card to container
    this.container.nativeElement.appendChild(card);
  }

  downloadFile() {
    // Replace with your actual download logic
    console.log('Downloading Draw.io file...');
    // Example: window.open('/path-to-drawio-file.drawio', '_blank');
  }
}














/* Download Card */
.download-card {
    background-color: #111113; /* matches container */
    border-radius: 8px;
    padding: 1rem;
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    gap: 1rem;
    border: 1px solid #27272a; /* subtle border */
    animation: slideFadeIn 0.5s ease forwards;
    opacity: 0;
}

.download-info {
    display: flex;
    align-items: flex-start;
    gap: 0.8rem;
}

.info-icon {
    font-size: 1.8rem;
    color: #00bfff; /* info icon gradient accent */
}

.download-info h4 {
    margin: 0;
    font-size: 1.1rem;
    color: #FFF;
}

.download-info p {
    margin: 0.2rem 0 0 0;
    font-size: 0.9rem;
    color: #ccc;
}

/* Modern Download Icon Button */
.modern-download-icon-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(135deg, #00bfff, #0099ff);
    color: #fff;
    font-size: 1.3rem;
    width: 50px;
    height: 50px;
    border: none;
    border-radius: 50%;
    cursor: pointer;
    box-shadow: 0 4px 12px rgba(0, 191, 255, 0.4);
    backdrop-filter: blur(6px);
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    animation: bounceIn 0.6s ease;
    flex-shrink: 0; /* prevent stretching */
}

.modern-download-icon-btn i {
    transition: transform 0.3s ease;
}

.modern-download-icon-btn:hover {
    background: linear-gradient(135deg, #0099ff, #00bfff);
    transform: translateY(-2px) scale(1.1);
    box-shadow: 0 6px 16px rgba(0, 191, 255, 0.5);
}

.modern-download-icon-btn:hover i {
    transform: rotate(-20deg);
}

.modern-download-icon-btn::after {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(circle, rgba(255, 255, 255, 0.15) 0%, transparent 70%);
    transform: translate(-50%, -50%) rotate(45deg);
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
}

.modern-download-icon-btn:hover::after {
    opacity: 1;
}

/* Step-by-Step Guide */
.download-steps {
    margin: 0.5rem 0 0 0;
    padding-left: 0;
    list-style: none;
}

.download-steps li {
    display: flex;
    align-items: flex-start;
    gap: 0.6rem;
    margin-bottom: 0.5rem;
    font-size: 0.9rem;
    color: #ccc;
    background-color: #1a1a26; /* slightly lighter than container */
    padding: 0.5rem 0.7rem;
    border-radius: 8px;
    border: 1px solid #27272a; /* subtle border */
    transition: background 0.3s ease;
}

.download-steps li:hover {
    background: linear-gradient(90deg, #00bfff20, #0099ff20);
}

.step-number {
    display: flex;
    align-items: center;
    justify-content: center;
    min-width: 28px;
    height: 28px;
    border-radius: 50%;
    background: linear-gradient(135deg, #00bfff, #0099ff);
    color: #fff;
    font-weight: 600;
    flex-shrink: 0;
    font-size: 0.85rem;
}

/* Animations */
@keyframes slideFadeIn {
    0% {
        opacity: 0;
        transform: translateY(20px);
    }
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes bounceIn {
    0% {
        transform: scale(0);
        opacity: 0;
    }
    60% {
        transform: scale(1.2);
        opacity: 1;
    }
    100% {
        transform: scale(1);
        opacity: 1;
    }
}


