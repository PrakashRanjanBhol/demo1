addFieldToTemplate(): void {
  if (!this.currentField.label.trim()) {
    alert('Please enter a field label');
    return;
  }
  
  const fieldId = this.currentField.label.toLowerCase().replace(/\s+/g, '_') + '_' + Date.now();
  
  const newField: FormField = {
    id: fieldId,
    label: this.currentField.label,
    type: this.currentField.type,
    placeholder: this.currentField.placeholder,
    required: this.currentField.required
  };
  
  if (this.currentField.type === 'select' || this.currentField.type === 'radio') {
    if (!this.selectOptions.trim()) {
      alert('Please enter options');
      return;
    }
    
    // Split options and remove duplicates
    const rawOptions = this.selectOptions.split(',').map(opt => opt.trim()).filter(opt => opt);
    const uniqueOptions = [...new Set(rawOptions)];
    
    // Check if there were duplicates
    if (rawOptions.length !== uniqueOptions.length) {
      const duplicateCount = rawOptions.length - uniqueOptions.length;
      alert(`Warning: ${duplicateCount} duplicate option(s) removed. Each option must be unique.`);
    }
    
    // Check if we have at least one option after removing duplicates
    if (uniqueOptions.length === 0) {
      alert('Please enter at least one valid option');
      return;
    }
    
    newField.options = uniqueOptions;
  }
  
  this.newTemplate.formFields.push(newField);
  
  this.currentField = {
    id: '',
    label: '',
    type: 'text',
    placeholder: '',
    required: false
  };
  this.selectOptions = '';
}
