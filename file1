<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sliding Logger Container - Dark Theme</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: #0f172a;
            height: 100vh;
            overflow-x: hidden;
            transition: all 0.3s ease;
        }

        body.light {
            background: #f0f2f5;
        }

        /* Theme toggle button */
        .theme-toggle {
            position: fixed;
            top: 20px;
            right: 20px;
            width: 50px;
            height: 50px;
            background: #4f46e5;
            border: none;
            border-radius: 12px;
            color: white;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 4px 12px rgba(79, 70, 229, 0.3);
            transition: all 0.3s ease;
            z-index: 1000;
        }

        .theme-toggle:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(79, 70, 229, 0.4);
        }

        body.light .theme-toggle {
            background: #1e293b;
        }

        /* Main sidebar container */
        .sidebar {
            position: fixed;
            right: 0;
            top: 0;
            width: 320px;
            height: 100vh;
            background: #1e293b;
            border-left: 1px solid #334155;
            box-shadow: -2px 0 20px rgba(0, 0, 0, 0.3);
            display: flex;
            flex-direction: column;
            transition: all 0.3s ease;
        }

        body.light .sidebar {
            background: #ffffff;
            border-left: 1px solid #e1e5e9;
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.1);
        }

        /* Main content of sidebar */
        .sidebar-content {
            flex: 1;
            padding: 20px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .sidebar-title {
            font-size: 24px;
            font-weight: 600;
            margin-bottom: 20px;
        }

        .sidebar-item {
            padding: 12px 0;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            font-size: 14px;
            opacity: 0.9;
        }

        /* Logger trigger button */
        .logger-trigger {
            position: absolute;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%);
            width: 50px;
            height: 50px;
            background: #4f46e5;
            border: none;
            border-radius: 50%;
            color: white;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 4px 12px rgba(79, 70, 229, 0.4);
            transition: all 0.3s ease;
            z-index: 10;
        }

        .logger-trigger:hover {
            background: #4338ca;
            transform: translateX(-50%) translateY(-2px);
            box-shadow: 0 6px 20px rgba(79, 70, 229, 0.5);
        }

        body.light .logger-trigger {
            background: #2563eb;
        }

        body.light .logger-trigger:hover {
            background: #1d4ed8;
        }

        .logger-trigger svg {
            width: 24px;
            height: 24px;
        }

        /* Logger container - Dark Theme */
        .logger-container {
            position: fixed;
            right: 0;
            bottom: 0;
            width: 320px;
            height: 50vh;
            background: #0f172a;
            border-top: 1px solid #334155;
            border-left: 1px solid #334155;
            box-shadow: -2px -2px 30px rgba(0, 0, 0, 0.5);
            transform: translateY(100%);
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            z-index: 20;
            display: flex;
            flex-direction: column;
            backdrop-filter: blur(10px);
        }

        body.light .logger-container {
            background: #ffffff;
            border-top: 1px solid #e1e5e9;
            border-left: 1px solid #e1e5e9;
            box-shadow: -2px -2px 20px rgba(0, 0, 0, 0.15);
        }

        .logger-container.active {
            transform: translateY(0);
        }

        /* Logger header - Dark Theme */
        .logger-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 16px 20px;
            background: linear-gradient(135deg, #1e293b 0%, #334155 100%);
            border-bottom: 1px solid #475569;
            min-height: 60px;
            position: relative;
            overflow: hidden;
        }

        .logger-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 1px;
            background: linear-gradient(90deg, transparent, #64748b, transparent);
        }

        body.light .logger-header {
            background: #f8fafc;
            border-bottom: 1px solid #e1e5e9;
        }

        body.light .logger-header::before {
            display: none;
        }

        .logger-title {
            font-size: 16px;
            font-weight: 600;
            color: #e2e8f0;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        body.light .logger-title {
            color: #1e293b;
        }

        .collapse-btn {
            background: rgba(148, 163, 184, 0.1);
            border: 1px solid rgba(148, 163, 184, 0.2);
            cursor: pointer;
            padding: 8px;
            border-radius: 8px;
            color: #cbd5e0;
            transition: all 0.2s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            backdrop-filter: blur(5px);
        }

        .collapse-btn:hover {
            background: rgba(148, 163, 184, 0.2);
            border-color: rgba(148, 163, 184, 0.3);
            color: #e2e8f0;
            transform: translateY(-1px);
        }

        body.light .collapse-btn {
            background: none;
            border: none;
            color: #64748b;
        }

        body.light .collapse-btn:hover {
            background: #e2e8f0;
            color: #334155;
            transform: none;
        }

        .collapse-btn svg {
            width: 20px;
            height: 20px;
        }

        /* Logger content - Dark Theme */
        .logger-content {
            flex: 1;
            padding: 16px 20px;
            overflow-y: auto;
            background: linear-gradient(180deg, #0f172a 0%, #1e293b 100%);
            position: relative;
        }

        .logger-content::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 20px;
            background: linear-gradient(180deg, rgba(15, 23, 42, 0.8) 0%, transparent 100%);
            pointer-events: none;
            z-index: 1;
        }

        body.light .logger-content {
            background: #ffffff;
        }

        body.light .logger-content::before {
            display: none;
        }

        /* Custom scrollbar for dark theme */
        .logger-content::-webkit-scrollbar {
            width: 6px;
        }

        .logger-content::-webkit-scrollbar-track {
            background: rgba(51, 65, 85, 0.3);
        }

        .logger-content::-webkit-scrollbar-thumb {
            background: linear-gradient(180deg, #4f46e5, #7c3aed);
            border-radius: 3px;
        }

        .logger-content::-webkit-scrollbar-thumb:hover {
            background: linear-gradient(180deg, #4338ca, #6d28d9);
        }

        body.light .logger-content::-webkit-scrollbar-track {
            background: #f1f5f9;
        }

        body.light .logger-content::-webkit-scrollbar-thumb {
            background: #cbd5e0;
        }

        body.light .logger-content::-webkit-scrollbar-thumb:hover {
            background: #94a3b8;
        }

        /* Log entries - Dark Theme */
        .log-entry {
            padding: 10px 14px;
            margin-bottom: 8px;
            border-radius: 8px;
            font-family: 'Monaco', 'Consolas', 'SF Mono', monospace;
            font-size: 12px;
            line-height: 1.5;
            border-left: 3px solid #475569;
            background: rgba(30, 41, 59, 0.6);
            backdrop-filter: blur(5px);
            border: 1px solid rgba(71, 85, 105, 0.3);
            transition: all 0.2s ease;
            position: relative;
            overflow: hidden;
        }

        .log-entry::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 1px;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
        }

        .log-entry:hover {
            transform: translateX(2px);
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
        }

        .log-entry.info {
            background: rgba(14, 165, 233, 0.1);
            border-left-color: #0ea5e9;
            border-color: rgba(14, 165, 233, 0.2);
            color: #7dd3fc;
        }

        .log-entry.warning {
            background: rgba(245, 158, 11, 0.1);
            border-left-color: #f59e0b;
            border-color: rgba(245, 158, 11, 0.2);
            color: #fbbf24;
        }

        .log-entry.error {
            background: rgba(239, 68, 68, 0.1);
            border-left-color: #ef4444;
            border-color: rgba(239, 68, 68, 0.2);
            color: #fca5a5;
        }

        /* Light theme log entries */
        body.light .log-entry {
            background: #f8fafc;
            border-left: 3px solid #e2e8f0;
            border: 1px solid #e2e8f0;
            color: #475569;
        }

        body.light .log-entry::before {
            display: none;
        }

        body.light .log-entry:hover {
            background: #f1f5f9;
        }

        body.light .log-entry.info {
            background: #f0f9ff;
            border-left-color: #0ea5e9;
            color: #0c4a6e;
        }

        body.light .log-entry.warning {
            background: #fffbeb;
            border-left-color: #f59e0b;
            color: #92400e;
        }

        body.light .log-entry.error {
            background: #fef2f2;
            border-left-color: #ef4444;
            color: #991b1b;
        }

        .log-timestamp {
            opacity: 0.7;
            font-size: 10px;
            margin-right: 8px;
            color: #94a3b8;
        }

        body.light .log-timestamp {
            opacity: 0.6;
            color: #64748b;
        }

        /* Demo content area */
        .main-content {
            margin-right: 320px;
            padding: 40px;
            height: 100vh;
            background: linear-gradient(135deg, #0f172a 0%, #1e293b 100%);
            transition: all 0.3s ease;
        }

        body.light .main-content {
            background: #f0f2f5;
        }

        .demo-title {
            font-size: 32px;
            font-weight: 700;
            color: #e2e8f0;
            margin-bottom: 16px;
        }

        body.light .demo-title {
            color: #1e293b;
        }

        .demo-description {
            color: #94a3b8;
            font-size: 16px;
            line-height: 1.6;
        }

        body.light .demo-description {
            color: #64748b;
        }

        /* Add some glow effects for dark theme */
        @keyframes glow {

            0%,
            100% {
                box-shadow: 0 0 5px rgba(79, 70, 229, 0.2);
            }

            50% {
                box-shadow: 0 0 20px rgba(79, 70, 229, 0.4);
            }
        }

        .logger-container:not(.light) .logger-header {
            animation: glow 4s ease-in-out infinite;
        }

        body.light .logger-container .logger-header {
            animation: none;
        }
    </style>
</head>

<body>
    <!-- Theme toggle button -->
    <button class="theme-toggle" id="themeToggle">
        <svg viewBox="0 0 24 24" width="20" height="20" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z" />
        </svg>
    </button>

    <!-- Main content area -->
    <div class="main-content">
        <h1 class="demo-title">Sliding Logger UI Demo - Dark Theme</h1>
        <p class="demo-description">
            This demo shows a sidebar with a sliding logger container designed for dark theme. The logger features
            glassmorphism effects, gradient backgrounds, custom scrollbars, and beautiful hover animations.
            Click the theme toggle in the top-right to switch between dark and light modes.
        </p>
    </div>

    <!-- Sidebar container -->
    <div class="sidebar">
        <!-- Main sidebar content -->
        <div class="sidebar-content">
            <h2 class="sidebar-title">Sidebar</h2>
            <div class="sidebar-item">Dashboard</div>
            <div class="sidebar-item">Analytics</div>
            <div class="sidebar-item">Reports</div>
            <div class="sidebar-item">Settings</div>
            <div class="sidebar-item">Profile</div>
            <div class="sidebar-item">Help & Support</div>
        </div>

        <!-- Logger trigger button -->
        <button class="logger-trigger" id="loggerTrigger">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path
                    d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
            </svg>
        </button>
    </div>

    <!-- Logger container -->
    <div class="logger-container" id="loggerContainer">
        <!-- Logger header -->
        <div class="logger-header">
            <div class="logger-title">
                <svg viewBox="0 0 24 24" width="16" height="16" fill="none" stroke="currentColor" stroke-width="2">
                    <path
                        d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                </svg>
                System Logger
            </div>
            <button class="collapse-btn" id="collapseBtn">
                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <path d="M19 14l-7-7-7 7" />
                </svg>
            </button>
        </div>

        <!-- Logger content -->
        <div class="logger-content">
            <div class="log-entry info">
                <span class="log-timestamp">10:23:45</span>
                [INFO] Application started successfully
            </div>
            <div class="log-entry info">
                <span class="log-timestamp">10:23:46</span>
                [INFO] Database connection established
            </div>
            <div class="log-entry warning">
                <span class="log-timestamp">10:24:12</span>
                [WARN] High memory usage detected (85%)
            </div>
            <div class="log-entry info">
                <span class="log-timestamp">10:24:45</span>
                [INFO] User authentication successful
            </div>
            <div class="log-entry error">
                <span class="log-timestamp">10:25:03</span>
                [ERROR] Failed to load configuration file
            </div>
            <div class="log-entry info">
                <span class="log-timestamp">10:25:15</span>
                [INFO] Fallback configuration loaded
            </div>
            <div class="log-entry info">
                <span class="log-timestamp">10:25:30</span>
                [INFO] System ready for requests
            </div>
        </div>
    </div>

    <script>
        const themeToggle = document.getElementById('themeToggle');
        const loggerTrigger = document.getElementById('loggerTrigger');
        const loggerContainer = document.getElementById('loggerContainer');
        const collapseBtn = document.getElementById('collapseBtn');

        // Theme toggle functionality
        function toggleTheme() {
            document.body.classList.toggle('light');
            const isLight = document.body.classList.contains('light');

            // Update theme toggle icon
            themeToggle.innerHTML = isLight
                ? '<svg viewBox="0 0 24 24" width="20" height="20" fill="none" stroke="currentColor" stroke-width="2"><circle cx="12" cy="12" r="5"/><path d="M12 1v2M12 21v2M4.22 4.22l1.42 1.42M18.36 18.36l1.42 1.42M1 12h2M21 12h2M4.22 19.78l1.42-1.42M18.36 5.64l1.42-1.42"/></svg>'
                : '<svg viewBox="0 0 24 24" width="20" height="20" fill="none" stroke="currentColor" stroke-width="2"><path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"/></svg>';
        }

        // Toggle logger container
        function toggleLogger() {
            loggerContainer.classList.toggle('active');
        }

        // Event listeners
        themeToggle.addEventListener('click', toggleTheme);
        loggerTrigger.addEventListener('click', toggleLogger);
        collapseBtn.addEventListener('click', toggleLogger);

        // Auto-scroll to bottom of logger content
        const loggerContent = document.querySelector('.logger-content');
        loggerContent.scrollTop = loggerContent.scrollHeight;

        // Demo: Add new log entries periodically
        const logTypes = ['info', 'warning', 'error'];
        const logMessages = [
            '[INFO] Processing user request',
            '[INFO] Cache updated successfully',
            '[WARN] Slow query detected',
            '[ERROR] Network timeout occurred',
            '[INFO] Background task completed',
            '[WARN] Disk space low (15% remaining)',
            '[INFO] Session cleanup completed',
            '[INFO] WebSocket connection established',
            '[WARN] Rate limit threshold reached',
            '[ERROR] Authentication failed',
            '[INFO] Data synchronization complete'
        ];

        function addRandomLogEntry() {
            const now = new Date();
            const timestamp = now.toTimeString().split(' ')[0];
            const randomType = logTypes[Math.floor(Math.random() * logTypes.length)];
            const randomMessage = logMessages[Math.floor(Math.random() * logMessages.length)];

            const logEntry = document.createElement('div');
            logEntry.className = `log-entry ${randomType}`;
            logEntry.innerHTML = `
                <span class="log-timestamp">${timestamp}</span>
                ${randomMessage}
            `;

            // Add entry with animation
            logEntry.style.opacity = '0';
            logEntry.style.transform = 'translateY(10px)';
            loggerContent.appendChild(logEntry);

            // Animate in
            setTimeout(() => {
                logEntry.style.transition = 'all 0.3s ease';
                logEntry.style.opacity = '1';
                logEntry.style.transform = 'translateY(0)';
            }, 10);

            loggerContent.scrollTop = loggerContent.scrollHeight;

            // Remove old entries if too many
            const entries = loggerContent.querySelectorAll('.log-entry');
            if (entries.length > 50) {
                entries[0].style.transition = 'all 0.3s ease';
                entries[0].style.opacity = '0';
                entries[0].style.transform = 'translateX(-20px)';
                setTimeout(() => entries[0].remove(), 300);
            }
        }

        // Add a new log entry every 4 seconds
        setInterval(addRandomLogEntry, 4000);

        // Initialize theme based on time of day (optional)
        const hour = new Date().getHours();
        if (hour >= 6 && hour < 18) {
            // Daytime - you can uncomment this to default to light theme during day
            // document.body.classList.add('light');
            // toggleTheme();
        }
    </script>
</body>

</html>
