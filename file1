// theme-toggle.component.ts
import { Component, EventEmitter, Input, Output } from '@angular/core';

@Component({
  selector: 'app-theme-toggle',
  template: `
    <div class="toggle-container">
      <span class="theme-label" [class.dark]="isDarkMode">Light</span>
      
      <div class="toggle-switch" (click)="toggleTheme()" [class.dark]="isDarkMode">
        <!-- Stars for dark mode -->
        <i class="pi pi-star-fill star star-1" [class.visible]="isDarkMode"></i>
        <i class="pi pi-star-fill star star-2" [class.visible]="isDarkMode"></i>
        <i class="pi pi-star-fill star star-3" [class.visible]="isDarkMode"></i>
        <i class="pi pi-star-fill star star-4" [class.visible]="isDarkMode"></i>
        <i class="pi pi-star-fill star star-5" [class.visible]="isDarkMode"></i>
        
        <div class="toggle-slider">
          <i class="pi pi-sun sun-icon"></i>
          <i class="pi pi-moon moon-icon"></i>
        </div>
      </div>
      
      <span class="theme-label" [class.dark]="isDarkMode">Dark</span>
    </div>
  `,
  styles: [`
    .toggle-container {
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 1rem;
      margin-bottom: 2rem;
    }

    .theme-label {
      font-size: 1.1rem;
      font-weight: 600;
      color: #555;
      transition: all 0.3s ease;
    }

    .theme-label.dark {
      color: #cbd5e0;
    }

    .toggle-switch {
      position: relative;
      width: 70px;
      height: 36px;
      background: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%);
      border-radius: 50px;
      cursor: pointer;
      transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
      border: 2px solid rgba(102, 126, 234, 0.2);
      backdrop-filter: blur(10px);
      box-shadow: 0 8px 32px rgba(102, 126, 234, 0.1);
      overflow: hidden;
    }

    .toggle-switch.dark {
      background: linear-gradient(135deg, #1e293b 0%, #0f172a 100%);
      border-color: rgba(148, 163, 184, 0.3);
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
    }

    .toggle-switch:hover {
      transform: scale(1.05);
      box-shadow: 0 12px 40px rgba(102, 126, 234, 0.2);
    }

    .toggle-switch.dark:hover {
      box-shadow: 0 12px 40px rgba(0, 0, 0, 0.4);
    }

    /* Stars in dark mode toggle background */
    .star {
      position: absolute;
      color: #fbbf24;
      opacity: 0;
      transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
      animation: twinkle 2s ease-in-out infinite;
    }

    .star.visible {
      opacity: 1;
    }

    .star-1 { 
      top: 20%; 
      left: 15%; 
      font-size: 8px;
      animation-delay: 0s; 
    }
    
    .star-2 { 
      top: 60%; 
      left: 25%; 
      font-size: 6px;
      animation-delay: 0.5s; 
    }
    
    .star-3 { 
      top: 30%; 
      left: 70%; 
      font-size: 7px;
      animation-delay: 1s; 
    }
    
    .star-4 { 
      top: 70%; 
      left: 80%; 
      font-size: 5px;
      animation-delay: 1.5s; 
    }
    
    .star-5 { 
      top: 40%; 
      left: 50%; 
      font-size: 6px;
      animation-delay: 0.8s; 
    }

    @keyframes twinkle {
      0%, 100% { 
        opacity: 0.3; 
        transform: scale(1); 
      }
      50% { 
        opacity: 1; 
        transform: scale(1.2); 
      }
    }

    .star.visible {
      animation-play-state: running;
    }

    .star:not(.visible) {
      animation-play-state: paused;
    }

    .toggle-slider {
      position: absolute;
      top: 2px;
      left: 2px;
      width: 30px;
      height: 30px;
      background: linear-gradient(135deg, #ffd89b 0%, #19547b 100%);
      border-radius: 50%;
      transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
      display: flex;
      align-items: center;
      justify-content: center;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
      z-index: 10;
    }

    .toggle-switch.dark .toggle-slider {
      transform: translateX(34px);
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4);
    }

    .sun-icon {
      font-size: 16px;
      color: #FFA500;
      opacity: 1;
      transform: rotate(0deg);
      transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
      text-shadow: 0 0 8px rgba(255, 165, 0, 0.5);
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%) rotate(0deg);
    }

    .moon-icon {
      font-size: 16px;
      color: #E2E8F0;
      opacity: 0;
      transform: translate(-50%, -50%) rotate(180deg);
      transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
      text-shadow: 0 0 8px rgba(226, 232, 240, 0.3);
      position: absolute;
      top: 50%;
      left: 50%;
    }

    .toggle-switch.dark .sun-icon {
      opacity: 0;
      transform: translate(-50%, -50%) rotate(-180deg);
    }

    .toggle-switch.dark .moon-icon {
      opacity: 1;
      transform: translate(-50%, -50%) rotate(0deg);
    }
  `]
})
export class ThemeToggleComponent {
  @Input() isDarkMode: boolean = false;
  @Output() themeToggled = new EventEmitter<boolean>();

  toggleTheme(): void {
    this.isDarkMode = !this.isDarkMode;
    this.themeToggled.emit(this.isDarkMode);
    
    // Add vibration effect on mobile devices
    if (navigator.vibrate) {
      navigator.vibrate(50);
    }
  }
}

// Usage in parent component:
/*
// app.component.ts
import { Component } from '@angular/core';

@Component({
  selector: 'app-root',
  template: `
    <div class="container" [class.dark]="isDarkMode">
      <h1 class="title">Theme Toggle Demo</h1>
      
      <app-theme-toggle 
        [isDarkMode]="isDarkMode"
        (themeToggled)="onThemeToggled($event)">
      </app-theme-toggle>
      
      <div class="demo-card">
        <p class="demo-text">
          This toggle seamlessly switches between light and dark themes with smooth animations and glassmorphism effects. The design adapts beautifully to both modes!
        </p>
        <button class="demo-button">Try Me!</button>
      </div>
    </div>
  `,
  styles: [`
    .container {
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      background: #FFF;
      transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
      padding: 2rem;
    }

    .container.dark {
      background: linear-gradient(135deg, #0f0f23 0%, #1a1a2e 50%, #16213e 100%);
    }

    .title {
      font-size: 2.5rem;
      font-weight: 700;
      margin-bottom: 2rem;
      color: #333;
      text-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      text-align: center;
    }

    .container.dark .title {
      color: #e2e8f0;
      text-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

    .demo-card {
      background: rgba(102, 126, 234, 0.05);
      backdrop-filter: blur(20px);
      border: 1px solid rgba(102, 126, 234, 0.1);
      border-radius: 20px;
      padding: 2rem;
      max-width: 400px;
      margin: 2rem auto 0;
      box-shadow: 0 20px 60px rgba(102, 126, 234, 0.08);
      transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .container.dark .demo-card {
      background: rgba(30, 41, 59, 0.4);
      border-color: rgba(148, 163, 184, 0.2);
      box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
    }

    .demo-text {
      font-size: 1rem;
      color: #555;
      line-height: 1.6;
      margin-bottom: 1rem;
    }

    .container.dark .demo-text {
      color: #cbd5e0;
    }

    .demo-button {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      border: none;
      padding: 0.75rem 1.5rem;
      border-radius: 12px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
    }

    .demo-button:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 25px rgba(102, 126, 234, 0.6);
    }
  `]
})
export class AppComponent {
  isDarkMode = false;

  onThemeToggled(isDark: boolean): void {
    this.isDarkMode = isDark;
    // Apply theme to document body or use a theme service
    document.body.classList.toggle('dark', isDark);
  }
}
*/

// Don't forget to:
// 1. Install PrimeNG: npm install primeng
// 2. Install PrimeIcons: npm install primeicons
// 3. Add to angular.json styles array: "node_modules/primeicons/primeicons.css"
// 4. Import the component in your module
