updatePreview() {
  if (!this.previewFrame?.nativeElement) return;

  const iframe = this.previewFrame.nativeElement;
  const doc = iframe.contentDocument || iframe.contentWindow?.document;
  if (!doc) return;

  doc.open();
  doc.write(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
      <meta charset="UTF-8" />
      <meta name="viewport" content="width=device-width, initial-scale=1.0" />
      <title>Live Preview</title>
      <style>
        body { margin: 0; padding: 20px; font-family: Arial, sans-serif; }
        ${this.cssCode}
      </style>
    </head>
    <body>
      <div id="preview-loader" style="padding:10px;font-size:14px;color:#555;">Loading external resources...</div>
    </body>
    </html>
  `);
  doc.close();

  // Parse HTML for external resources
  const tempDiv = document.createElement('div');
  tempDiv.innerHTML = this.htmlCode;

  const bodyContent = tempDiv.innerHTML;
  const links = tempDiv.querySelectorAll('link[rel="stylesheet"]');
  const scripts = tempDiv.querySelectorAll('script[src]');

  let resourcesToLoad = links.length + scripts.length;
  let loadedCount = 0;

  const checkIfDone = () => {
    loadedCount++;
    if (loadedCount >= resourcesToLoad) {
      // Replace loader with actual content
      const previewLoader = doc.getElementById('preview-loader');
      if (previewLoader) previewLoader.remove();

      doc.body.innerHTML = bodyContent;

      // Inline JS (not from src) + user JS
      const inlineScript = doc.createElement('script');
      inlineScript.textContent = `
        window.onerror = function(msg) {
          document.body.innerHTML += '<div style="color:red;padding:5px;">Error: ' + msg + '</div>';
        };
        try {
          ${this.jsCode}
        } catch(e) {
          document.body.innerHTML += '<div style="color:red;padding:5px;">Error: ' + e.message + '</div>';
        }
      `;
      doc.body.appendChild(inlineScript);
    }
  };

  if (resourcesToLoad === 0) {
    checkIfDone();
  } else {
    // Append CSS links
    links.forEach(link => {
      const newLink = doc.createElement('link');
      newLink.rel = 'stylesheet';
      newLink.href = link.getAttribute('href')!;
      newLink.onload = checkIfDone;
      newLink.onerror = checkIfDone;
      doc.head.appendChild(newLink);
    });

    // Append JS scripts
    scripts.forEach(script => {
      const newScript = doc.createElement('script');
      newScript.src = script.getAttribute('src')!;
      newScript.onload = checkIfDone;
      newScript.onerror = checkIfDone;
      doc.body.appendChild(newScript);
    });
  }
}
