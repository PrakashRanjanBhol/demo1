import React from 'react';
import styles from './SpacePanel.module.css';

const SpacePanel = ({ spaces, onSyncSpace }) => {
  return (
    <div className={styles.wrapper}>
      {spaces.map(space => (
        <div key={space.key} className={styles.spaceBlock}>
          <div className={styles.syncMeta}>
            <div className={styles.syncedTime}>
              <i className="pi pi-clock" /> Last synced: {space.lastSynced}
            </div>
            <div className={styles.syncStatusRow}>
              <span className={`${styles.status} ${space.syncStatus === 'success' ? styles.success : styles.failure}`}>
                {space.syncStatus === 'success' ? '‚úÖ Success' : '‚ùå Failed'}
              </span>
              <button
                title="Sync this space"
                className={styles.syncButton}
                onClick={() => onSyncSpace(space.key)}
              >
                <i className="pi pi-refresh" />
              </button>
            </div>
          </div>

          <div className={styles.spaceItem}>
            üìÅ {space.name}
          </div>
        </div>
      ))}
    </div>
  );
};

export default SpacePanel;











.wrapper {
  padding: 1rem;
  background-color: #0c0c0c;
  color: #e0e0e0;
}

.spaceBlock {
  margin-bottom: 1.5rem;
}

.syncMeta {
  margin-bottom: 0.3rem;
}

.syncedTime {
  font-size: 0.75rem;
  color: #9ca3af;
  display: flex;
  align-items: center;
  gap: 0.4rem;
}

.syncStatusRow {
  display: flex;
  align-items: center;
  justify-content: space-between;
  font-size: 0.75rem;
  margin-top: 0.2rem;
}

.status {
  font-weight: 500;
}

.success {
  color: #4ade80; /* green */
}

.failure {
  color: #f87171; /* red */
}

.syncButton {
  background: transparent;
  border: none;
  color: #60a5fa;
  cursor: pointer;
  font-size: 0.85rem;
  padding: 0.2rem;
  transition: color 0.2s ease;
}

.syncButton:hover {
  color: #3b82f6;
}

.spaceItem {
  background-color: #141414;
  padding: 0.6rem 1rem;
  border-radius: 6px;
  font-weight: 500;
  transition: background-color 0.3s ease;
  cursor: pointer;
}

.spaceItem:hover {
  background-color: #1e1e1e;
}
