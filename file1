import React, { useEffect, useState } from 'react';
import { Card } from 'primereact/card';
import { classNames } from 'primereact/utils';
import { Checkbox } from 'primereact/checkbox';
import styles from './FileListPanel.module.css';

const FileListPanel = ({ mode = 'single' }) => {
  const [files, setFiles] = useState([]);
  const [selectedFiles, setSelectedFiles] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    // Simulate API call
    setTimeout(() => {
      const apiResponse = ["file1", "file2", "file3"];
      const formatted = apiResponse.map(name => ({
        file_name: name,
        file_path: `/dummy/path/${name}`
      }));
      setFiles(formatted);
      setLoading(false);
    }, 1000);
  }, []);

  const isSelected = (file) => {
    if (mode === 'single') return selectedFiles[0]?.file_path === file.file_path;
    return selectedFiles.some(f => f.file_path === file.file_path);
  };

  const toggleFile = (file) => {
    if (mode === 'single') {
      setSelectedFiles([file]);
    } else {
      if (isSelected(file)) {
        setSelectedFiles(prev => prev.filter(f => f.file_path !== file.file_path));
      } else {
        setSelectedFiles(prev => [...prev, file]);
      }
    }
  };

  const handleSelectAll = () => {
    if (selectedFiles.length === files.length) {
      setSelectedFiles([]);
    } else {
      setSelectedFiles(files);
    }
  };

  return (
    <div className={styles.rightPanel}>
      <h3 className={styles.panelHeader}>Documents</h3>

      {loading ? (
        <div className={styles.loaderWrapper}>
          <div className={styles.dotsLoader}>
            <span></span><span></span><span></span>
          </div>
          <p className={styles.loadingText}>Loading documents...</p>
        </div>
      ) : (
        <>
          {mode === 'multi' && (
            <div className={styles.selectAllRow}>
              <Checkbox
                inputId="selectAll"
                checked={selectedFiles.length === files.length}
                onChange={handleSelectAll}
              />
              <label htmlFor="selectAll" className={styles.selectAllLabel}>Select All</label>
            </div>
          )}

          <div className={styles.fileList}>
            {files.map((file) => (
              <Card
                key={file.file_path}
                className={classNames(styles.fileCard, { [styles.selected]: isSelected(file) })}
                onClick={() => toggleFile(file)}
              >
                <div className={styles.fileIconWrapper}>
                  {isSelected(file) && (
                    <i className={`pi pi-check ${styles.tickIcon}`}></i>
                  )}
                  <i className="pi pi-file" style={{ fontSize: '1.2rem', marginRight: '0.5rem' }}></i>
                  <span className={styles.fileName}>{file.file_name}</span>
                </div>
              </Card>
            ))}
          </div>
        </>
      )}
    </div>
  );
};

export default FileListPanel;





<FileListPanel mode="single" />  // single selection
<FileListPanel mode="multi" />   // multiple + select all




.selectAllRow {
  display: flex;
  align-items: center;
  margin-bottom: 1rem;
  gap: 0.5rem;
}

.selectAllLabel {
  color: #ccc;
  font-size: 0.95rem;
}
