// toggle-switch.component.ts
import { Component, Input, Output, EventEmitter } from '@angular/core';

@Component({
  selector: 'app-toggle-switch',
  templateUrl: './toggle-switch.component.html',
  styleUrls: ['./toggle-switch.component.css']
})
export class ToggleSwitchComponent {
  @Input() selectedOption: string = 'General';
  @Output() valueChange = new EventEmitter<string>();

  options = ['General', 'Code RAG', 'Jira', 'Confluence', 'Reusable Components'];
  visibleCount = 4;
  currentIndex = 0;

  get visibleOptions() {
    return this.options.slice(this.currentIndex, this.currentIndex + this.visibleCount);
  }

  get canScrollLeft(): boolean {
    return this.currentIndex > 0;
  }

  get canScrollRight(): boolean {
    return this.currentIndex + this.visibleCount < this.options.length;
  }

  scrollLeft() {
    if (this.canScrollLeft) {
      this.currentIndex--;
    }
  }

  scrollRight() {
    if (this.canScrollRight) {
      this.currentIndex++;
    }
  }

  toggleOption(option: string) {
    this.valueChange.emit(option);
  }
}


// toggle-switch.component.html
<div class="carousel-wrapper">
  <button 
    class="nav-button nav-left" 
    (click)="scrollLeft()"
    [class.disabled]="!canScrollLeft"
    [disabled]="!canScrollLeft"
  >
    <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <polyline points="15 18 9 12 15 6"></polyline>
    </svg>
  </button>

  <div class="toggle-flex-container">
    <div
      *ngFor="let option of visibleOptions"
      class="toggle-button"
      [class.active]="selectedOption === option"
      (click)="toggleOption(option)"
    >
      {{ option }}
    </div>
  </div>

  <button 
    class="nav-button nav-right" 
    (click)="scrollRight()"
    [class.disabled]="!canScrollRight"
    [disabled]="!canScrollRight"
  >
    <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <polyline points="9 18 15 12 9 6"></polyline>
    </svg>
  </button>
</div>

<div class="carousel-indicators">
  <span 
    *ngFor="let option of options; let i = index"
    class="indicator"
    [class.active]="i >= currentIndex && i < currentIndex + visibleCount"
  ></span>
</div>


// toggle-switch.component.css
.carousel-wrapper {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  max-width: 900px;
  margin: 1rem auto;
  position: relative;
}

.toggle-flex-container {
  display: flex;
  gap: 0.25rem;
  background: linear-gradient(135deg, #6366f1, #8b5cf6);
  border-radius: 1.5rem;
  padding: 3px;
  flex: 1;
  box-shadow: 0 8px 32px rgba(99, 102, 241, 0.4);
  overflow: hidden;
  transition: all 0.3s ease;
}

.toggle-button {
  flex: 1;
  text-align: center;
  padding: 0.4rem 0.6rem;
  color: #fff;
  border-radius: 1.3rem;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  user-select: none;
  font-size: 0.7rem;
  font-weight: 500;
  white-space: nowrap;
  position: relative;
  overflow: hidden;
  min-width: 0;
  letter-spacing: 0.3px;
}

.toggle-button::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(135deg, rgba(255,255,255,0.15) 0%, transparent 100%);
  opacity: 0;
  transition: opacity 0.3s ease;
}

.toggle-button:hover::before {
  opacity: 1;
}

.toggle-button:hover:not(.active) {
  background-color: rgba(255, 255, 255, 0.1);
  transform: translateY(-1px);
}

.toggle-button.active {
  background: linear-gradient(135deg, #ffffff 0%, #f0f0f0 100%);
  color: #6366f1;
  font-weight: 700;
  box-shadow: 0 4px 20px rgba(255, 255, 255, 0.3),
              0 0 0 2px rgba(255, 255, 255, 0.1);
  transform: scale(1.02);
}

.nav-button {
  background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 100%);
  border: 2px solid rgba(255, 255, 255, 0.2);
  color: #ffffff;
  width: 36px;
  height: 36px;
  border-radius: 50%;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  flex-shrink: 0;
  box-shadow: 0 4px 20px rgba(99, 102, 241, 0.3);
}

.nav-button:hover:not(.disabled) {
  background: linear-gradient(135deg, #ffffff 0%, #f8f8f8 100%);
  color: #6366f1;
  transform: scale(1.15);
  box-shadow: 0 6px 30px rgba(99, 102, 241, 0.5);
  border-color: rgba(255, 255, 255, 0.6);
}

.nav-button:active:not(.disabled) {
  transform: scale(0.95);
}

.nav-button.disabled {
  opacity: 0.3;
  cursor: not-allowed;
  background: #1a1a1a;
  border-color: #2a2a2a;
  color: #555;
}

.carousel-indicators {
  display: flex;
  justify-content: center;
  gap: 0.5rem;
  margin-top: 0.75rem;
}

.indicator {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background-color: #333;
  transition: all 0.3s ease;
}

.indicator.active {
  background-color: #ffcc00;
  box-shadow: 0 0 8px rgba(255, 204, 0, 0.6);
  transform: scale(1.2);
}

/* Responsive design */
@media (max-width: 768px) {
  .carousel-wrapper {
    max-width: 100%;
    padding: 0 0.5rem;
  }

  .toggle-button {
    font-size: 0.8rem;
    padding: 0.6rem 0.75rem;
  }

  .nav-button {
    width: 40px;
    height: 40px;
  }
}
