// template-sidebar.component.ts
import { Component } from '@angular/core';
import { CommonModule } from '@angular/common';

interface Template {
  id: number;
  title: string;
  description: string;
  badge?: string;
}

@Component({
  selector: 'app-template-sidebar',
  standalone: true,
  imports: [CommonModule],
  templateUrl: './template-sidebar.component.html',
  styleUrls: ['./template-sidebar.component.css']
})
export class TemplateSidebarComponent {
  activeTab: 'predefined' | 'custom' = 'predefined';
  hasCustomTemplates: boolean = false;

  predefinedTemplates: Template[] = [
    {
      id: 1,
      title: 'Business Proposal',
      description: 'Professional template for business proposals and pitches',
      badge: 'Popular'
    },
    {
      id: 2,
      title: 'Project Report',
      description: 'Comprehensive template for project documentation'
    },
    {
      id: 3,
      title: 'Meeting Notes',
      description: 'Organized structure for meeting minutes and action items',
      badge: 'Recommended'
    },
    {
      id: 4,
      title: 'Marketing Plan',
      description: 'Strategic template for marketing campaigns and strategies'
    },
    {
      id: 5,
      title: 'Invoice Template',
      description: 'Professional invoice layout for billing clients'
    },
    {
      id: 6,
      title: 'Resume Builder',
      description: 'Clean and modern resume template'
    }
  ];

  customTemplates: Template[] = [
    {
      id: 1,
      title: 'My Custom Template',
      description: 'Personal template for specific needs'
    },
    {
      id: 2,
      title: 'Team Workflow',
      description: 'Custom workflow template for team collaboration'
    }
  ];

  switchTab(tab: 'predefined' | 'custom'): void {
    this.activeTab = tab;
  }

  selectTemplate(template: Template): void {
    console.log('Selected template:', template);
    // Add your template selection logic here
  }

  createNewTemplate(): void {
    console.log('Create new template');
    // Add your template creation logic here
  }
}


// template-sidebar.component.html
<div class="sidebar">
  <div class="sidebar-header">
    <div class="header-title">
      <div class="header-icon">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"/>
          <polyline points="14 2 14 8 20 8"/>
          <line x1="16" y1="13" x2="8" y2="13"/>
          <line x1="16" y1="17" x2="8" y2="17"/>
          <polyline points="10 9 9 9 8 9"/>
        </svg>
      </div>
      <h2>Templates</h2>
    </div>
  </div>

  <div class="sidebar-tabs">
    <div class="tab-buttons">
      <button 
        class="tab-btn" 
        [class.active]="activeTab === 'predefined'"
        (click)="switchTab('predefined')">
        Predefined
      </button>
      <button 
        class="tab-btn" 
        [class.active]="activeTab === 'custom'"
        (click)="switchTab('custom')">
        Custom
      </button>
    </div>
  </div>

  <div class="content-area">
    <!-- Predefined Templates -->
    <div *ngIf="activeTab === 'predefined'" class="tab-content">
      <div 
        class="template-card" 
        *ngFor="let template of predefinedTemplates"
        (click)="selectTemplate(template)">
        <h3>{{ template.title }}</h3>
        <p>{{ template.description }}</p>
        <span class="template-badge" *ngIf="template.badge">{{ template.badge }}</span>
      </div>
    </div>

    <!-- Custom Templates (Empty State) -->
    <div *ngIf="activeTab === 'custom' && !hasCustomTemplates" class="tab-content">
      <div class="empty-state">
        <div class="empty-state-icon">ðŸ“„</div>
        <h3>No Custom Templates</h3>
        <p>You haven't created any custom templates yet. Start by creating your first one!</p>
        <button class="create-btn" (click)="createNewTemplate()">+ Create New Template</button>
      </div>
    </div>

    <!-- Custom Templates (With Templates) -->
    <div *ngIf="activeTab === 'custom' && hasCustomTemplates" class="tab-content">
      <div style="margin-bottom: 16px;">
        <button class="create-btn" style="width: 100%;" (click)="createNewTemplate()">+ Create New Template</button>
      </div>
      
      <div 
        class="template-card" 
        *ngFor="let template of customTemplates"
        (click)="selectTemplate(template)">
        <h3>{{ template.title }}</h3>
        <p>{{ template.description }}</p>
      </div>
    </div>
  </div>
</div>


// template-sidebar.component.css
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.sidebar {
  width: 320px;
  height: 100vh;
  background: #111113;
  border-right: 1px solid #2a2a2d;
  display: flex;
  flex-direction: column;
}

.sidebar-header {
  padding: 20px;
  border-bottom: 1px solid #2a2a2d;
}

.header-title {
  display: flex;
  align-items: center;
  gap: 12px;
}

.header-icon {
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: linear-gradient(135deg, #6366f1, #8b5cf6, #a855f7);
  border-radius: 10px;
  color: white;
}

.header-icon svg {
  width: 22px;
  height: 22px;
}

.sidebar-header h2 {
  font-size: 20px;
  font-weight: 600;
  color: #e8e8e8;
  margin: 0;
}

.sidebar-tabs {
  padding: 16px 20px;
  border-bottom: 1px solid #2a2a2d;
}

.tab-buttons {
  display: flex;
  gap: 8px;
}

.tab-btn {
  flex: 1;
  padding: 10px 16px;
  border: none;
  background: #1c1c1f;
  color: #9ca3af;
  font-size: 14px;
  font-weight: 500;
  border-radius: 6px;
  cursor: pointer;
  transition: all 0.3s ease;
}

.tab-btn:hover {
  background: #252528;
  color: #d1d5db;
}

.tab-btn.active {
  background: linear-gradient(135deg, #6366f1, #8b5cf6, #a855f7);
  color: white;
}

.content-area {
  flex: 1;
  overflow-y: auto;
  padding: 16px;
}

.template-card {
  background: #1c1c1f;
  border: 1px solid #2a2a2d;
  border-radius: 8px;
  padding: 16px;
  margin-bottom: 12px;
  cursor: pointer;
  transition: all 0.2s ease;
}

.template-card:hover {
  border-color: #8b5cf6;
  box-shadow: 0 2px 12px rgba(139, 92, 246, 0.3);
  transform: translateY(-2px);
  background: #252528;
}

.template-card h3 {
  font-size: 15px;
  font-weight: 600;
  color: #e8e8e8;
  margin-bottom: 6px;
}

.template-card p {
  font-size: 13px;
  color: #9ca3af;
  line-height: 1.4;
}

.template-badge {
  display: inline-block;
  padding: 4px 8px;
  background: linear-gradient(135deg, rgba(99, 102, 241, 0.2), rgba(139, 92, 246, 0.2), rgba(168, 85, 247, 0.2));
  color: #c4b5fd;
  font-size: 11px;
  font-weight: 500;
  border-radius: 4px;
  margin-top: 8px;
  border: 1px solid rgba(139, 92, 246, 0.3);
}

.empty-state {
  text-align: center;
  padding: 40px 20px;
}

.empty-state-icon {
  width: 80px;
  height: 80px;
  margin: 0 auto 16px;
  background: #1c1c1f;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 36px;
}

.empty-state h3 {
  font-size: 16px;
  font-weight: 600;
  color: #e8e8e8;
  margin-bottom: 8px;
}

.empty-state p {
  font-size: 14px;
  color: #9ca3af;
  margin-bottom: 20px;
  line-height: 1.5;
}

.create-btn {
  background: linear-gradient(135deg, #6366f1, #8b5cf6, #a855f7);
  color: white;
  border: none;
  padding: 12px 24px;
  border-radius: 6px;
  font-size: 14px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
}

.create-btn:hover {
  transform: translateY(-1px);
  box-shadow: 0 4px 16px rgba(139, 92, 246, 0.4);
  filter: brightness(1.1);
}

.content-area::-webkit-scrollbar {
  width: 6px;
}

.content-area::-webkit-scrollbar-track {
  background: transparent;
}

.content-area::-webkit-scrollbar-thumb {
  background: #d0d0d0;
  border-radius: 3px;
}

.content-area::-webkit-scrollbar-thumb:hover {
  background: #b0b0b0;
}
