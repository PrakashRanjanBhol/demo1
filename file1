/* Root Dark Theme */
:host {
    color: #e0e0e0;
    background-color: transparent;
}

/* Trigger Button */
.feature-trigger {
    background-color: #3b82f6;
    border: none;
    border-radius: 50%;
    width: 45px;
    height: 45px;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.4);
    color: white;
}

.feature-trigger:hover {
    transform: scale(1.1);
    box-shadow: 0 10px 22px rgba(0, 0, 0, 0.6);
}

/* Overlay Panel */
.upload-options-panel {
    padding: 20px;
    border-radius: 18px;
    background-color: rgba(20, 20, 30, 0.75);
    backdrop-filter: blur(16px);
    animation: fadeInPanel 0.3s ease-out;
    box-shadow: 0 12px 32px rgba(0, 0, 0, 0.7);
}

/* Container */
.feature-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 20px;
}

/* Feature Card */
.glass-card {
    width: 220px;
    padding: 20px;
    border-radius: 16px;
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.08);
    backdrop-filter: blur(20px);
    transition: all 0.35s ease;
    cursor: pointer;
    text-align: center;
    animation: fadeUp 0.4s ease;
    box-shadow: 0 6px 30px rgba(0, 0, 0, 0.3);
}

.glass-card:hover {
    transform: translateY(-8px) scale(1.04);
    box-shadow: 0 12px 40px rgba(0, 0, 0, 0.5);
    background: rgba(255, 255, 255, 0.08);
}

/* Icon Circle */
.feature-icon-container {
    width: 60px;
    height: 60px;
    margin: 0 auto 14px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.5rem;
    transition: transform 0.3s ease;
    box-shadow: inset 0 0 0 2px rgba(255, 255, 255, 0.1);
}

.feature-icon-container:hover {
    transform: scale(1.1) rotate(2deg);
}

.code-icon {
    background: linear-gradient(135deg, #1e3a8a, #3b82f6);
    color: #c7d2fe;
}

.image-icon {
    background: linear-gradient(135deg, #78350f, #f59e0b);
    color: #fde68a;
}

/* Titles and Descriptions */
.feature-title {
    font-size: 1.1rem;
    font-weight: 600;
    color: #f3f4f6;
    margin-bottom: 6px;
}

.feature-desc {
    font-size: 0.9rem;
    color: #9ca3af;
    margin: 0;
}

/* Animations */
@keyframes fadeUp {
    from {
        opacity: 0;
        transform: translateY(14px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes fadeInPanel {
    from {
        opacity: 0;
        transform: scale(0.95);
    }

    to {
        opacity: 1;
        transform: scale(1);
    }
}

/* Mobile */
@media (max-width: 540px) {
    .feature-container {
        flex-direction: column;
        align-items: center;
    }

    .glass-card {
        width: 90%;
    }
}
















<!-- Trigger -->
<button type="button" pButton icon="pi pi-plus" class="feature-trigger" (click)="panel.toggle($event)">
</button>

<!-- OverlayPanel with animated cards -->
<p-overlayPanel #panel [showCloseIcon]="true" styleClass="upload-options-panel">
    <div class="feature-container">
        <!-- Feature: Ask from Codebase -->
        <div class="feature-card glass-card" (click)="openCodebaseModal(); panel.hide()">
            <div class="feature-icon-container code-icon">
                <i class="pi pi-folder-open"></i>
            </div>
            <h3 class="feature-title">Ask from Codebase</h3>
            <p class="feature-desc">Upload folders or files and query about your codebase.</p>
        </div>

        <!-- Feature: Ask from Image -->
        <div class="feature-card glass-card" (click)="triggerImageUpload(); panel.hide()">
            <div class="feature-icon-container image-icon">
                <i class="pi pi-image"></i>
            </div>
            <h3 class="feature-title">Ask from Image</h3>
            <p class="feature-desc">Upload an image and ask questions based on visuals.</p>
            <input #fileInput type="file" accept="image/*" hidden (change)="onImageUpload($event)" multiple />
        </div>
    </div>
</p-overlayPanel>

<!-- Modal -->
<p-dialog header="Upload Codebase" [(visible)]="showCodeModal" [modal]="true" [style]="{ width: '50vw' }">
    <p>Upload your codebase or files here.</p>
</p-dialog>















  showCodeModal = false;

  @ViewChild('fileInput') fileInputRef!: ElementRef<HTMLInputElement>;

  openCodebaseModal() {
    this.showCodeModal = true;
  }

  triggerImageUpload() {
    this.fileInputRef.nativeElement.click();
  }

  onImageUpload(event: Event) {
    const input = event.target as HTMLInputElement;
    const files = input.files;
    if (files && files.length > 0) {
      console.log('Uploaded images:', files);
      // Handle image upload here
    }
  }
}
