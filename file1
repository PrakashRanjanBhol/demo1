<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Best Practices Documentation</title>

  <!-- Highlight.js CSS -->
  <link rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/styles/atom-one-dark.min.css">

  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Inter', sans-serif;
      background-color: #111113;
      color: #e4e4e7;
      height: 100vh;
      display: flex;
      flex-direction: column;
    }

    /* Input section */
    .input-section {
      height: 40%;
      border-bottom: 2px solid #2a2a2f;
      background: #1a1a1d;
      display: flex;
      flex-direction: column;
    }

    .input-section h3 {
      padding: 10px;
      font-size: 14px;
      font-weight: 600;
      color: #60a5fa;
      border-bottom: 1px solid #2a2a2f;
    }

    textarea {
      flex: 1;
      width: 100%;
      resize: none;
      padding: 12px;
      background: #111113;
      color: #e4e4e7;
      border: none;
      outline: none;
      font-family: monospace;
      font-size: 14px;
    }

    /* Preview section */
    .preview-section {
      flex: 1;
      display: flex;
      height: 60%;
    }

    .sidebar {
      width: 300px;
      background: rgba(20, 20, 23, 0.8);
      backdrop-filter: blur(10px);
      border-right: 1px solid #2a2a2f;
      overflow-y: auto;
      padding: 20px;
    }

    .sidebar h3 {
      color: #60a5fa;
      font-size: 16px;
      font-weight: 600;
      margin-bottom: 16px;
      display: flex;
      align-items: center;
      gap: 8px;
    }

    .sidebar h3::before {
      content: "ðŸ“š";
      font-size: 14px;
    }

    .toc {
      list-style: none;
    }

    .toc li {
      margin-bottom: 8px;
    }

    .toc a {
      color: #a1a1aa;
      text-decoration: none;
      display: block;
      padding: 8px 12px;
      border-radius: 8px;
      font-size: 14px;
      transition: all 0.2s ease;
      border-left: 3px solid transparent;
    }

    .toc a:hover {
      background: rgba(96, 165, 250, 0.1);
      color: #60a5fa;
      border-left-color: #60a5fa;
      transform: translateX(4px);
    }

    .toc a.active {
      background: linear-gradient(135deg, rgba(96, 165, 250, 0.2), rgba(167, 139, 250, 0.15));
      color: #60a5fa;
      border-left-color: #60a5fa;
      box-shadow: 0 2px 8px rgba(96, 165, 250, 0.2);
      transform: translateX(4px);
      font-weight: 600;
    }

    .toc .level-2 {
      margin-left: 16px;
      font-size: 13px;
    }

    .toc .level-3 {
      margin-left: 32px;
      font-size: 12px;
      opacity: 0.8;
    }

    .main-content {
      flex: 1;
      overflow-y: auto;
      padding: 40px;
      background: rgba(17, 17, 19, 0.5);
    }

    .content {
      max-width: 800px;
      margin: 0 auto;
      line-height: 1.7;
    }

    .content h1 {
      color: #f4f4f5;
      font-size: 2.5rem;
      font-weight: 700;
      margin-bottom: 16px;
      background: linear-gradient(135deg, #60a5fa, #a78bfa);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }

    .content h2 {
      color: #60a5fa;
      font-size: 1.75rem;
      font-weight: 600;
      margin: 32px 0 16px 0;
      padding-bottom: 8px;
      border-bottom: 2px solid rgba(96, 165, 250, 0.2);
    }

    .content h3 {
      color: #a78bfa;
      font-size: 1.25rem;
      font-weight: 600;
      margin: 24px 0 12px 0;
    }

    .content p,
    .content ul,
    .content ol {
      color: #d4d4d8;
      margin-bottom: 16px;
    }

    .content ul,
    .content ol {
      margin-left: 24px;
    }

    .content li {
      margin-bottom: 8px;
      padding-left: 8px;
    }

    .content code {
      background: rgba(39, 39, 42, 0.8);
      color: #fbbf24;
      padding: 2px 6px;
      border-radius: 4px;
      font-family: 'Fira Code', monospace;
      font-size: 0.9em;
    }

    .content pre {
      background: rgba(39, 39, 42, 0.9);
      border: 1px solid #3f3f46;
      border-radius: 12px;
      padding: 20px;
      margin: 20px 0;
      overflow-x: auto;
      position: relative;
    }

    .content blockquote {
      border-left: 4px solid #60a5fa;
      padding-left: 20px;
      margin: 20px 0;
      font-style: italic;
      background: rgba(96, 165, 250, 0.05);
      border-radius: 0 8px 8px 0;
    }
  </style>
</head>

<body>
  <!-- Row 1: Input -->
  <div class="input-section">
    <h3>Markdown Input</h3>
    <textarea id="markdown-input"># Application Development Best Practices

A comprehensive guide to building robust, scalable, and maintainable applications.

## Code Organization <span class="badge">Essential</span>

### Directory Structure
Organize your codebase with a clear and logical directory structure:

\`\`\`javascript
function hello() {
  console.log("Hello World");
}
\`\`\`
</textarea>
  </div>

  <!-- Row 2: Preview -->
  <div class="preview-section">
    <div class="sidebar">
      <h3>Table of Contents</h3>
      <ul class="toc" id="toc"></ul>
    </div>
    <div class="main-content" id="main-content">
      <div class="content" id="content"></div>
    </div>
  </div>

  <!-- Scripts -->
  <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/highlight.min.js"></script>

  <script>
    let ignoreScroll = false;

    function renderMarkdown() {
      const input = document.getElementById('markdown-input').value;
      const content = document.getElementById('content');

      content.innerHTML = marked.parse(input);
      document.querySelectorAll('pre code').forEach(block => hljs.highlightElement(block));

      generateTOC();
      setupScrollSpy();
    }

    function generateTOC() {
      const content = document.getElementById('content');
      const toc = document.getElementById('toc');
      toc.innerHTML = '';

      const headers = content.querySelectorAll('h1,h2,h3');

      headers.forEach((header, index) => {
        const id = 'heading-' + index;
        header.id = id;

        const li = document.createElement('li');
        const a = document.createElement('a');
        a.href = '#' + id;
        a.textContent = header.textContent;
        a.className = 'level-' + header.tagName.charAt(1);

        a.addEventListener('click', e => {
          e.preventDefault();
          ignoreScroll = true;
          setActiveLink(a);
          document.getElementById(id).scrollIntoView({ behavior: 'smooth', block: 'start' });
          setTimeout(() => { ignoreScroll = false; }, 500);
        });

        li.appendChild(a);
        toc.appendChild(li);
      });
    }

    function setActiveLink(link) {
      document.querySelectorAll('.toc a').forEach(a => a.classList.remove('active'));
      link.classList.add('active');
    }

    function setupScrollSpy() {
      const headers = document.querySelectorAll('h1,h2,h3');
      const links = document.querySelectorAll('.toc a');
      const container = document.getElementById('main-content');

      function updateActiveLink() {
        if (ignoreScroll) return;
        let currentIndex = 0;
        const scrollTop = container.scrollTop;
        headers.forEach((h, i) => {
          const offset = h.offsetTop - container.offsetTop;
          if (offset <= scrollTop + 10) currentIndex = i;
        });
        links.forEach((l, i) => l.classList.toggle('active', i === currentIndex));
      }

      container.addEventListener('scroll', updateActiveLink);
      window.addEventListener('resize', updateActiveLink);
    }

    // Initial render
    renderMarkdown();
    document.getElementById('markdown-input').addEventListener('input', renderMarkdown);
  </script>
</body>

</html>
