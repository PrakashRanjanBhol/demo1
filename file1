showLeftArrow: boolean = false;
showRightArrow: boolean = true;




scrollCategories(direction: 'left' | 'right'): void {
  const container = this.categoryScroll.nativeElement;
  const scrollAmount = 200;
  const targetScroll = direction === 'left' 
    ? container.scrollLeft - scrollAmount 
    : container.scrollLeft + scrollAmount;
  
  container.scrollTo({
    left: targetScroll,
    behavior: 'smooth'
  });
  
  // Update arrow visibility after scroll completes
  setTimeout(() => {
    this.updateArrowVisibility();
  }, 300);
}

updateArrowVisibility(): void {
  const container = this.categoryScroll.nativeElement;
  this.showLeftArrow = container.scrollLeft > 0;
  this.showRightArrow = container.scrollLeft < (container.scrollWidth - container.clientWidth);
}

ngAfterViewInit(): void {
  if (this.categoryScroll) {
    this.updateArrowVisibility();
    
    // Listen to scroll events to update arrow visibility
    this.categoryScroll.nativeElement.addEventListener('scroll', () => {
      this.updateArrowVisibility();
    });
  }
}




<div class="category-filter-wrapper">
  <button 
    class="carousel-btn carousel-btn-left" 
    [disabled]="!showLeftArrow"
    [class.disabled]="!showLeftArrow"
    (click)="scrollCategories('left')">
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <polyline points="15 18 9 12 15 6"></polyline>
    </svg>
  </button>
  
  <div class="category-filter" #categoryScroll>
    <button 
      *ngFor="let category of categories"
      class="category-btn"
      [class.active]="selectedCategory === category"
      (click)="selectCategory(category)">
      {{ category }}
    </button>
  </div>
  
  <button 
    class="carousel-btn carousel-btn-right" 
    [disabled]="!showRightArrow"
    [class.disabled]="!showRightArrow"
    (click)="scrollCategories('right')">
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <polyline points="9 18 15 12 9 6"></polyline>
    </svg>
  </button>
</div>



.carousel-btn:disabled,
.carousel-btn.disabled {
  opacity: 0.3;
  cursor: not-allowed;
  pointer-events: none;
}

.carousel-btn:disabled:hover,
.carousel-btn.disabled:hover {
  background: #1c1c1f;
  border-color: #2a2a2d;
  color: #9ca3af;
  transform: none;
}

