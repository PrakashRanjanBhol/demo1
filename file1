// sidebar.component.ts
import { Component } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';

@Component({
  selector: 'app-sidebar',
  standalone: true,
  imports: [CommonModule, FormsModule],
  templateUrl: './sidebar.component.html',
  styleUrls: ['./sidebar.component.css']
})
export class SidebarComponent {
  projectInput: string = '';
  isDarkMode: boolean = true;

  examples = [
    'E-commerce store with Next.js and Stripe',
    'Real-time chat app using Socket.io',
    'Dashboard with charts and analytics'
  ];

  guidanceItems = [
    'Describe your project idea clearly',
    'Include the tech stack you prefer',
    'Mention any specific features needed',
    'Click generate to create your setup'
  ];

  toggleTheme(): void {
    this.isDarkMode = !this.isDarkMode;
    document.documentElement.setAttribute('data-theme', this.isDarkMode ? 'dark' : 'light');
  }

  fillExample(example: string): void {
    this.projectInput = example;
  }

  clearInput(): void {
    this.projectInput = '';
  }

  generateProject(): void {
    if (!this.projectInput.trim()) {
      alert('Please describe your project first!');
      return;
    }
    console.log('Generating project:', this.projectInput);
    alert('Project setup would be generated here!\n\nYour request: ' + this.projectInput);
  }

  ngOnInit(): void {
    document.documentElement.setAttribute('data-theme', 'dark');
  }
}













<!-- sidebar.component.html -->
<div class="app-container">
  <div class="sidebar">
    <div class="theme-toggle" (click)="toggleTheme()">
      <span class="theme-icon">{{ isDarkMode ? 'üåô' : '‚òÄÔ∏è' }}</span>
    </div>

    <div class="header">
      <h2>Quick Project Setup</h2>
      <p>Describe your project and we'll set it up automatically</p>
    </div>

    <div class="guidance-card">
      <div class="guidance-title">
        <span class="icon">üí°</span>
        <span>How to use</span>
      </div>
      <div class="guidance-list">
        <div class="guidance-item" *ngFor="let item of guidanceItems">
          {{ item }}
        </div>
      </div>
    </div>

    <div class="textarea-container">
      <label class="textarea-label">What would you like to build?</label>
      <textarea 
        [(ngModel)]="projectInput"
        placeholder="E.g., A task management app with React, Node.js, and MongoDB. Include user authentication and real-time updates..."
      ></textarea>
    </div>

    <div class="examples">
      <div 
        class="example-chip" 
        *ngFor="let example of examples"
        (click)="fillExample(example)"
      >
        {{ example }}
      </div>
    </div>

    <div class="button-container">
      <button class="btn btn-secondary" (click)="clearInput()">Clear</button>
      <button class="btn btn-primary" (click)="generateProject()">Generate Setup</button>
    </div>
  </div>

  <div class="main-content">
    <p>Your project setup will appear here...</p>
  </div>
</div>

















/* sidebar.component.css */

/* Dark Theme Variables (Default) */
:root[data-theme="dark"] {
  --bg-primary: #1a1a1c;
  --bg-secondary: #111113;
  --bg-tertiary: #1a1a1c;
  --bg-hover: #1f1f21;
  
  --border-primary: #2a2a2c;
  --border-hover: #35353a;
  
  --text-primary: #ffffff;
  --text-secondary: #9ca3af;
  --text-tertiary: #6b7280;
  
  --accent-primary: #6366f1;
  --accent-hover: #5558e3;
  --accent-glow: rgba(99, 102, 241, 0.1);
  
  --shadow-focus: 0 0 0 3px rgba(99, 102, 241, 0.1);
}

/* Light Theme Variables */
:root[data-theme="light"] {
  --bg-primary: #ffffff;
  --bg-secondary: #f9fafb;
  --bg-tertiary: #f3f4f6;
  --bg-hover: #f9fafb;
  
  --border-primary: #e5e7eb;
  --border-hover: #d1d5db;
  
  --text-primary: #111827;
  --text-secondary: #4b5563;
  --text-tertiary: #9ca3af;
  
  --accent-primary: #6366f1;
  --accent-hover: #5558e3;
  --accent-glow: rgba(99, 102, 241, 0.1);
  
  --shadow-focus: 0 0 0 3px rgba(99, 102, 241, 0.15);
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.app-container {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', sans-serif;
  background: var(--bg-primary);
  display: flex;
  min-height: 100vh;
  transition: background-color 0.3s ease;
}

.sidebar {
  width: 320px;
  background: var(--bg-secondary);
  padding: 24px;
  display: flex;
  flex-direction: column;
  gap: 20px;
  border-right: 1px solid var(--border-primary);
  position: relative;
  transition: background-color 0.3s ease, border-color 0.3s ease;
}

.theme-toggle {
  position: absolute;
  top: 16px;
  right: 16px;
  width: 36px;
  height: 36px;
  background: var(--bg-tertiary);
  border: 1px solid var(--border-primary);
  border-radius: 8px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.3s ease;
  z-index: 10;
}

.theme-toggle:hover {
  background: var(--bg-hover);
  border-color: var(--border-hover);
  transform: scale(1.05);
}

.theme-icon {
  font-size: 18px;
}

.header {
  display: flex;
  flex-direction: column;
  gap: 8px;
  padding-top: 20px;
}

.header h2 {
  color: var(--text-primary);
  font-size: 18px;
  font-weight: 600;
  letter-spacing: -0.02em;
  transition: color 0.3s ease;
}

.header p {
  color: var(--text-secondary);
  font-size: 13px;
  line-height: 1.5;
  transition: color 0.3s ease;
}

.guidance-card {
  background: var(--bg-tertiary);
  border: 1px solid var(--border-primary);
  border-radius: 12px;
  padding: 16px;
  display: flex;
  flex-direction: column;
  gap: 12px;
  transition: all 0.3s ease;
}

.guidance-title {
  color: var(--text-primary);
  font-size: 14px;
  font-weight: 500;
  display: flex;
  align-items: center;
  gap: 8px;
  transition: color 0.3s ease;
}

.icon {
  width: 20px;
  height: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.guidance-list {
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.guidance-item {
  color: var(--text-secondary);
  font-size: 12px;
  line-height: 1.5;
  padding-left: 16px;
  position: relative;
  transition: color 0.3s ease;
}

.guidance-item:before {
  content: "‚Üí";
  position: absolute;
  left: 0;
  color: var(--accent-primary);
}

.textarea-container {
  display: flex;
  flex-direction: column;
  gap: 8px;
  flex: 1;
}

.textarea-label {
  color: var(--text-primary);
  font-size: 13px;
  font-weight: 500;
  transition: color 0.3s ease;
}

textarea {
  width: 100%;
  min-height: 120px;
  background: var(--bg-tertiary);
  border: 1px solid var(--border-primary);
  border-radius: 8px;
  padding: 12px;
  color: var(--text-primary);
  font-size: 13px;
  font-family: inherit;
  resize: vertical;
  transition: all 0.3s ease;
}

textarea:focus {
  outline: none;
  border-color: var(--accent-primary);
  background: var(--bg-hover);
  box-shadow: var(--shadow-focus);
}

textarea::placeholder {
  color: var(--text-tertiary);
}

.button-container {
  display: flex;
  gap: 8px;
}

.btn {
  flex: 1;
  padding: 10px 16px;
  border: none;
  border-radius: 8px;
  font-size: 13px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
}

.btn-primary {
  background: var(--accent-primary);
  color: #ffffff;
}

.btn-primary:hover {
  background: var(--accent-hover);
  transform: translateY(-1px);
}

.btn-primary:active {
  transform: translateY(0);
}

.btn-secondary {
  background: var(--bg-tertiary);
  color: var(--text-secondary);
  border: 1px solid var(--border-primary);
  transition: all 0.3s ease;
}

.btn-secondary:hover {
  background: var(--bg-hover);
  color: var(--text-primary);
  border-color: var(--border-hover);
}

.examples {
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.example-chip {
  background: var(--bg-tertiary);
  border: 1px solid var(--border-primary);
  border-radius: 6px;
  padding: 8px 10px;
  font-size: 11px;
  color: var(--text-secondary);
  cursor: pointer;
  transition: all 0.3s ease;
}

.example-chip:hover {
  border-color: var(--accent-primary);
  color: var(--text-primary);
  background: var(--bg-hover);
}

.main-content {
  flex: 1;
  padding: 40px;
  color: var(--text-secondary);
  display: flex;
  align-items: center;
  justify-content: center;
  transition: color 0.3s ease;
}

