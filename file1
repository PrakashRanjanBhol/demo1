// app.component.html
<div class="app-layout">
  <app-sidebar class="sidebar-container"></app-sidebar>
  <div class="main-content">
    <router-outlet></router-outlet>
    <!-- Or your main content here -->
    <div class="content-placeholder">
      <h1>Main Content Area</h1>
      <p>This section takes up the remaining width after the sidebar.</p>
      <!-- Your main application content goes here -->
    </div>
  </div>
</div>

/* app.component.css */
.app-layout {
  display: flex;
  height: 100vh;
  background-color: #f5f5f5;
}

.sidebar-container {
  flex-shrink: 0; /* Prevents sidebar from shrinking */
}

.main-content {
  flex: 1; /* Takes up remaining width */
  overflow-y: auto;
  padding: 1.5rem;
  background: #ffffff;
  border-radius: 0.75rem;
  margin: 0.5rem 0.5rem 0.5rem 0;
  box-shadow: 0 0.125rem 1rem rgba(0, 0, 0, 0.1);
}

.content-placeholder {
  max-width: 1200px; /* Optional: limit max width for better readability */
}

.content-placeholder h1 {
  color: #2c3e50;
  margin-bottom: 1rem;
}

.content-placeholder p {
  color: #7f8c8d;
  line-height: 1.6;
}

/* Alternative: Using CSS Grid approach */
/*
.app-layout {
  display: grid;
  grid-template-columns: 250px 1fr;
  height: 100vh;
  background-color: #f5f5f5;
}
*/

/* Complete sidebar.component.css */
.sidebar {
  width: 250px;
  height: 100vh;
  background: #111113;
  border-radius: 0.75rem;
  padding: 1.5rem 1rem;
  position: relative;
  overflow-y: auto;
  box-shadow: 0 0.5rem 2rem rgba(0, 0, 0, 0.3);
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  color: white;
  margin: 0.5rem;
}

.sidebar::-webkit-scrollbar {
  width: 0.25rem;
}

.sidebar::-webkit-scrollbar-track {
  background: rgba(255, 255, 255, 0.05);
  border-radius: 0.125rem;
}

.sidebar::-webkit-scrollbar-thumb {
  background: rgba(255, 255, 255, 0.2);
  border-radius: 0.125rem;
}

.quick-links {
  margin-bottom: 2rem;
}

.section-title {
  color: #8b8b8d;
  font-size: 0.75rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.0625rem;
  margin-bottom: 1rem;
  padding-left: 0.5rem;
  display: flex;
  align-items: center;
}

.link-item {
  display: flex;
  align-items: center;
  padding: 0.75rem 0.75rem;
  margin-bottom: 0.25rem;
  border-radius: 0.5rem;
  color: #e0e0e2;
  font-size: 0.875rem;
  font-weight: 500;
  transition: all 0.2s ease;
  cursor: pointer;
  position: relative;
  overflow: hidden;
}

.link-item:hover {
  background: rgba(255, 255, 255, 0.08);
  transform: translateX(0.125rem);
  color: #ffffff;
}

.link-item:hover::before {
  transform: scaleY(1);
}

.link-item:hover .link-icon {
  opacity: 1;
}

.link-item::before {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 0.1875rem;
  background: linear-gradient(135deg, #667eea, #764ba2);
  transform: scaleY(0);
  transition: transform 0.2s ease;
}

.link-icon {
  width: 1.25rem;
  height: 1.25rem;
  margin-right: 0.75rem;
  opacity: 0.8;
  transition: opacity 0.2s ease;
  font-size: 1rem;
  display: flex;
  align-items: center;
  justify-content: center;
}

.documentation {
  border-top: 1px solid rgba(255, 255, 255, 0.1);
  padding-top: 1.5rem;
}

.doc-section {
  background: rgba(255, 255, 255, 0.03);
  border-radius: 0.5rem;
  padding: 1rem;
  margin-bottom: 0.75rem;
  border: 1px solid rgba(255, 255, 255, 0.05);
  transition: all 0.2s ease;
  cursor: pointer;
}

.doc-section:hover {
  background: rgba(255, 255, 255, 0.05);
  border-color: rgba(255, 255, 255, 0.1);
}

.doc-section:last-child {
  margin-top: 0.75rem;
}

.doc-title {
  display: flex;
  align-items: center;
  font-size: 0.8125rem;
  font-weight: 600;
  color: #e0e0e2;
  margin-bottom: 0.375rem;
}

.doc-description {
  font-size: 0.6875rem;
  color: #8b8b8d;
  line-height: 1.4;
}

.badge {
  color: white;
  font-size: 0.5625rem;
  padding: 0.125rem 0.375rem;
  border-radius: 0.25rem;
  margin-left: 0.5rem;
  font-weight: 600;
}

.badge.new-badge {
  background: linear-gradient(135deg, #667eea, #764ba2);
}

.badge.version-badge {
  background: linear-gradient(135deg, #667eea, #764ba2);
}

.divider {
  height: 1px;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
  margin: 1.25rem 0;
}

// Rest of your existing sidebar styles remain the same...

// If using Angular Router, update your routing module
// app-routing.module.ts
import { NgModule } from '@angular/core';
import { RouterModule, Routes } from '@angular/router';
import { PlaygroundComponent } from './playground/playground.component';
import { StatisticsComponent } from './statistics/statistics.component';
import { DownloadComponent } from './download/download.component';
// ... import other components

const routes: Routes = [
  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },
  { path: 'playground', component: PlaygroundComponent },
  { path: 'statistics', component: StatisticsComponent },
  { path: 'download', component: DownloadComponent },
  // ... other routes
];

@NgModule({
  imports: [RouterModule.forRoot(routes)],
  exports: [RouterModule]
})
export class AppRoutingModule { }

// Updated sidebar.component.ts to handle navigation
import { Component } from '@angular/core';
import { Router } from '@angular/router';

@Component({
  selector: 'app-sidebar',
  templateUrl: './sidebar.component.html',
  styleUrls: ['./sidebar.component.scss']
})
export class SidebarComponent {
  quickLinks = [
    { label: 'Playground', icon: 'pi pi-play-circle', route: '/playground' },
    { label: 'Statistics', icon: 'pi pi-chart-bar', route: '/statistics' },
    { label: 'Download', icon: 'pi pi-download', route: '/download' },
    { label: 'Operations', icon: 'pi pi-sliders-h', route: '/operations' },
    { label: 'Dashboard', icon: 'pi pi-objects-column', route: '/dashboard' },
    { label: 'Laboratory', icon: 'pi pi-desktop', route: '/laboratory' }
  ];

  documentationSections = [
    {
      title: 'Getting Started',
      description: 'Learn the basics of navigating and using the application interface',
      badge: 'NEW',
      badgeClass: 'new-badge'
    },
    {
      title: 'API Reference',
      description: 'Complete documentation for all available endpoints and methods'
    },
    {
      title: 'Best Practices',
      description: 'Tips and recommendations for optimal application usage'
    },
    {
      title: 'Troubleshooting',
      description: 'Common issues and their solutions to help you get unstuck'
    },
    {
      title: 'Release Notes',
      description: 'Latest updates, features, and improvements in this version',
      badge: 'v2.4',
      badgeClass: 'version-badge'
    }
  ];

  constructor(private router: Router) {}

  onLinkClick(route: string) {
    this.router.navigate([route]);
  }

  onDocSectionClick(section: any) {
    // Handle documentation section click
    console.log('Open documentation:', section.title);
    // You could navigate to a documentation page or open a modal
  }
}
