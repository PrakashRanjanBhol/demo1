/* src/components/DynamicDataTable.module.css */

.container {
  background-color: #181818;
  color: #f5f5f5;
  min-height: 100vh;
  padding: 2rem;
  font-family: 'Poppins', sans-serif;
}

.heading {
  color: #f5f5f5;
  margin-bottom: 1rem;
}

.multiSelect {
  margin-bottom: 1rem;
  width: 300px;
}

.dataTable :global(.p-datatable) {
  background-color: #1e1e1e;
  color: #f5f5f5;
  border: 1px solid #333;
  border-radius: 6px;
  overflow: hidden;
}

.dataTable :global(.p-datatable .p-datatable-thead > tr > th) {
  background-color: #252525;
  color: #f5f5f5;
  border-bottom: 1px solid #333;
}

.dataTable :global(.p-datatable .p-datatable-tbody > tr:hover) {
  background-color: #2a2a2a;
  transition: background-color 0.3s ease;
}

.dataTable :global(.p-datatable .p-datatable-tbody > tr.p-highlight) {
  background-color: #383838;
}

.dataTable :global(.p-column-header-content) {
  gap: 0.5rem;
}

.dataTable :global(.p-column-filter) {
  background-color: #252525;
  color: #f5f5f5;
  border: 1px solid #333;
  border-radius: 4px;
}

.dataTable :global(.p-paginator) {
  background-color: #1e1e1e;
  color: #f5f5f5;
  border-top: 1px solid #333;
}





// src/components/DynamicDataTable.jsx
import React, { useState, useMemo, useEffect } from 'react';
import { DataTable } from 'primereact/datatable';
import { Column } from 'primereact/column';
import { MultiSelect } from 'primereact/multiselect';
import styles from './DynamicDataTable.module.css';

const DynamicDataTable = ({ data }) => {
  const [visibleColumns, setVisibleColumns] = useState([]);

  const allColumns = useMemo(() => {
    if (!data || data.length === 0) return [];
    return Object.keys(data[0]).map((key) => ({
      field: key,
      header: key.charAt(0).toUpperCase() + key.slice(1),
    }));
  }, [data]);

  useEffect(() => {
    setVisibleColumns(allColumns);
  }, [allColumns]);

  const onColumnToggle = (e) => {
    setVisibleColumns(e.value);
  };

  return (
    <div className={styles.container}>
      <h3 className={styles.heading}>Dynamic Data Table</h3>

      <MultiSelect
        value={visibleColumns}
        options={allColumns}
        optionLabel="header"
        onChange={onColumnToggle}
        placeholder="Select Columns"
        display="chip"
        className={styles.multiSelect}
      />

      <div className={styles.dataTable}>
        <DataTable
          value={data}
          paginator
          rows={5}
          scrollable
          responsiveLayout="scroll"
          stripedRows
          showGridlines
        >
          {visibleColumns.map((col) => (
            <Column
              key={col.field}
              field={col.field}
              header={col.header}
              sortable
              filter
            />
          ))}
        </DataTable>
      </div>
    </div>
  );
};

export default DynamicDataTable;
