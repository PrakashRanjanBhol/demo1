import React, { useState } from 'react';
import { Dialog } from 'primereact/dialog';
import { Dropdown } from 'primereact/dropdown';
import { Button } from 'primereact/button';
import styles from './SelectModel.module.css';

const SelectModel = ({ onHide }) => {
    const [language, setLanguage] = useState('English');
    const [model, setModel] = useState(null);
    const [imageModel, setImageModel] = useState('Auto');
    const [pptModel, setPptModel] = useState('Auto');

    const languages = ['English', 'Hindi'];
    const models = ['Model A', 'Model B', 'Model C'];

    const handleLoadModel = () => {
        console.log('Loading model:', model);
        // Make API call here
    };

    const handleClearModel = () => {
        setModel(null);
    };

    const handleLoadImageModel = () => {
        console.log('Loading image model:', imageModel);
        // Make API call here
    };

    const handleLoadPptModel = () => {
        console.log('Loading ppt model:', pptModel);
        // Make API call here
    };

    return (
        <Dialog
            visible
            onHide={onHide}
            header="Model Selector"
            className={styles.dialog}
            style={{ width: '80vw', maxWidth: '1000px' }}
        >
            <div className={styles.modelSelectorContainer}>
                {/* Left Section */}
                <div className={styles.left}>
                    <h3 className={styles.heading}>Vision Model</h3>

                    <div className={styles.field}>
                        <label>
                            Select Language <span className={styles.desc}>Choose your preferred language</span>
                        </label>
                        <Dropdown
                            value={language}
                            options={languages}
                            onChange={(e) => setLanguage(e.value)}
                            className={styles.dropdown}
                        />
                    </div>

                    <div className={styles.field}>
                        <label>
                            Select Model <span className={styles.desc}>Pick a model to load</span>
                        </label>
                        <Dropdown
                            value={model}
                            options={models}
                            onChange={(e) => setModel(e.value)}
                            placeholder="Select Model"
                            className={styles.dropdown}
                        />
                    </div>

                    <div className={styles.buttons}>
                        <Button
                            icon="pi pi-play"
                            label="Load Model"
                            size="small"
                            className={`p-button-rounded ${styles.customBlue}`}
                            onClick={handleLoadModel}
                        />
                        <Button
                            label="Clear Model"
                            size="small"
                            className={`p-button-rounded ${styles.customOrange}`}
                            onClick={handleClearModel}
                        />
                    </div>

                </div>

                {/* Right Section */}
                <div className={styles.right}>
                    <h3 className={styles.heading}>Vision Model</h3>

                    <div className={styles.field}>
                        <label>
                            Select Image Model <span className={styles.desc}>Choose the image model to load</span>
                        </label>
                        <div className={styles.inlineInput}>
                            <Dropdown
                                value={imageModel}
                                options={['Auto', 'Custom Image Model']}
                                onChange={(e) => setImageModel(e.value)}
                                className={styles.dropdown}
                            />
                            <Button
                                icon="pi pi-play"
                                label="Load"
                                className={`p-button-rounded ${styles.customBlue}`}
                                size="small"
                                onClick={handleLoadImageModel}
                            />
                        </div>
                    </div>

                    <div className={styles.field}>
                        <label>
                            PPT Vision Model <span className={styles.desc}>Choose the PPT model to load</span>
                        </label>
                        <div className={styles.inlineInput}>
                            <Dropdown
                                value={pptModel}
                                options={['Auto', 'PPT Model X']}
                                onChange={(e) => setPptModel(e.value)}
                                className={styles.dropdown}
                            />
                            <Button
                                icon="pi pi-play"
                                label="Load"
                                className={`p-button-rounded ${styles.customOrange}`}
                                size="small"
                                onClick={handleLoadPptModel}
                            />
                        </div>
                    </div>
                </div>


            </div>
        </Dialog>
    );
};

export default SelectModel;



























.dialog {
    background-color: #181818 !important;
    color: white;
}

.modelSelectorContainer {
    display: flex;
    gap: 2rem;
    padding-top: 1rem;
}

.left,
.right {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    animation: fadeIn 0.4s ease-in-out;
}

.field label {
    font-weight: bold;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.desc {
    font-weight: normal;
    font-size: 0.85rem;
    color: #bbbbbb;
    margin-left: 0.5rem;
}

.dropdown {
    margin-top: 0.5rem;
    width: 100%;
}

.heading {
    font-size: 1.2rem;
    margin-bottom: 1rem;
    /* border-bottom: 1px solid #333; */
    padding-bottom: 0.5rem;
}

/* Animation */
@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(8px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.buttons {
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin-top: 0.5rem;
}

.visionBlock {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    margin-bottom: 1.5rem;
    align-items: center;
    /* center align buttons in right section too */
    text-align: left;
}

.visionBlock .p-button {
    width: fit-content;
    margin-top: 0.3rem;
}

.dialog {
    background-color: #181818 !important;
    color: white;
    font-size: 0.9rem;
    /* slightly smaller base font */
}

.field label {
    font-size: 0.95rem;
    /* slightly smaller label */
}

.desc {
    font-size: 0.8rem;
    /* subtle description */
}

.dropdown {
    font-size: 0.9rem;
    /* dropdown text */
}

.heading {
    font-size: 1.1rem;
    /* reduce heading size slightly */
}

.customBlue {
    background-color: #007bff !important;
    border-color: #007bff !important;
    color: white;
}

.customOrange {
    background-color: #f39c12 !important;
    border-color: #f39c12 !important;
    color: white;
}

.inlineInput {
    display: flex;
    align-items: center;
    gap: 1rem;
}

.inlineInput .p-dropdown {
    flex: 1;
}

.inlineInput .p-button {
    white-space: nowrap;
}

.modelSelectorContainer :global(.p-dropdown) {
    background: transparent;
    border: 1px solid #232323;
}










<button onClick={() => setShowModal(true)}>Open Model Selector</button>
                {showModal && <SelectModel onHide={() => setShowModal(false)} />}

const [showModal, setShowModal] = useState(false);
import SelectModel from "./SelectModel";
