// theme-toggle.component.ts
import { Component } from '@angular/core';
import { CommonModule } from '@angular/common';

@Component({
  selector: 'app-theme-toggle',
  standalone: true,
  imports: [CommonModule],
  template: `
    <div class="theme-toggle" (click)="toggleTheme($event)" [class.dark]="isDarkMode">
      <div class="icon-container">
        <i class="fas fa-sun sun-icon"></i>
        <i class="fas fa-moon moon-icon"></i>
      </div>
    </div>
  `,
  styles: [`
    .theme-toggle {
      width: 50px;
      height: 50px;
      border-radius: 50%;
      background: rgba(255, 255, 255, 0.2);
      backdrop-filter: blur(20px);
      border: 2px solid rgba(255, 255, 255, 0.3);
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      position: relative;
      transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
      box-shadow: 0 10px 40px rgba(0, 0, 0, 0.2);
    }

    .theme-toggle.dark {
      background: rgba(30, 41, 59, 0.8);
      border-color: rgba(148, 163, 184, 0.3);
      box-shadow: 0 10px 40px rgba(0, 0, 0, 0.4);
    }

    .theme-toggle:hover {
      transform: scale(1.1) rotate(5deg);
      box-shadow: 0 15px 50px rgba(0, 0, 0, 0.3);
    }

    .theme-toggle:active {
      transform: scale(0.95);
    }

    .icon-container {
      position: relative;
      width: 24px;
      height: 24px;
    }

    .sun-icon {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%) scale(1);
      font-size: 20px;
      color: #FFA500;
      text-shadow: 0 0 20px rgba(255, 165, 0, 0.6);
      transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
      opacity: 1;
    }

    .moon-icon {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%) scale(0);
      font-size: 20px;
      color: #E2E8F0;
      text-shadow: 0 0 20px rgba(226, 232, 240, 0.5);
      transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
      opacity: 0;
    }

    .theme-toggle.dark .sun-icon {
      transform: translate(-50%, -50%) scale(0);
      opacity: 0;
    }

    .theme-toggle.dark .moon-icon {
      transform: translate(-50%, -50%) scale(1);
      opacity: 1;
    }

    ::ng-deep .ripple {
      position: absolute;
      border-radius: 50%;
      background: rgba(255, 255, 255, 0.4);
      animation: ripple-animation 0.6s ease-out;
      pointer-events: none;
    }

    .theme-toggle.dark ::ng-deep .ripple {
      background: rgba(100, 126, 234, 0.4);
    }

    @keyframes ripple-animation {
      0% {
        width: 0;
        height: 0;
        opacity: 1;
      }
      100% {
        width: 200px;
        height: 200px;
        opacity: 0;
      }
    }
  `]
})
export class ThemeToggleComponent {
  isDarkMode = false;

  toggleTheme(event: MouseEvent) {
    this.isDarkMode = !this.isDarkMode;
    this.createRipple(event);
    
    // Vibration effect for mobile
    if (navigator.vibrate) {
      navigator.vibrate(50);
    }
  }

  createRipple(event: MouseEvent) {
    const button = event.currentTarget as HTMLElement;
    const ripple = document.createElement('span');
    ripple.classList.add('ripple');
    
    ripple.style.width = '0px';
    ripple.style.height = '0px';
    ripple.style.left = '50%';
    ripple.style.top = '50%';
    ripple.style.transform = 'translate(-50%, -50%)';
    
    button.appendChild(ripple);
    
    setTimeout(() => {
      ripple.remove();
    }, 600);
  }
}


// ==========================
// HOW TO USE
// ==========================

/*
1. Add Font Awesome to your index.html:
   <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

2. Import and use the component:
   import { ThemeToggleComponent } from './theme-toggle.component';

3. Use in template:
   <app-theme-toggle></app-theme-toggle>

4. To detect theme changes in parent component, you can add an Output:
   @Output() themeChanged = new EventEmitter<boolean>();
   
   Then in toggleTheme():
   this.themeChanged.emit(this.isDarkMode);
*/
