function extractCodeBlocks(text) {
    // Matches code blocks: ``` optionally followed by language, content, then ```
    // Removed ^ and $ anchors to allow code blocks anywhere in the text
    const regex = /```(\w+)?\s*\n([\s\S]*?)\n```/g;
    const result = [];
    let lastIndex = 0;
    let match;
    
    while ((match = regex.exec(text)) !== null) {
        const matchStart = match.index;
        const matchEnd = regex.lastIndex;
        
        // Extract non-code content before this code block
        const nonCodeText = text.slice(lastIndex, matchStart).trim();
        if (nonCodeText.length > 0) {
            result.push({ type: 'non-code', content: nonCodeText });
        }
        
        const language = match[1] || null;
        const codeContent = match[2].trim();
        result.push({ type: 'code', language, content: codeContent });
        
        lastIndex = matchEnd;
    }
    
    // Remaining non-code content
    if (lastIndex < text.length) {
        const remaining = text.slice(lastIndex).trim();
        if (remaining.length > 0) {
            result.push({ type: 'non-code', content: remaining });
        }
    }
    
    return result;
}
