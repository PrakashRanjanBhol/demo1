// theme-toggle.component.ts
import { Component, OnInit } from '@angular/core';
import { CommonModule } from '@angular/common';

@Component({
  selector: 'app-theme-toggle',
  standalone: true,
  imports: [CommonModule],
  template: `
    <div class="page-wrapper" [class.dark]="isDarkMode">
      <div class="bg-particles" #particles></div>
      
      <div class="container">
        <h1 class="title">Theme Toggle Demo</h1>
        
        <div class="theme-toggle" (click)="toggleTheme($event)">
          <div class="icon-container">
            <i class="fas fa-sun sun-icon"></i>
            <i class="fas fa-moon moon-icon"></i>
          </div>
        </div>

        <div class="theme-label">Click to switch theme</div>
        
        <div class="demo-card">
          <p class="demo-text">
            Click the icon above to seamlessly switch between light and dark themes with smooth animations and beautiful effects!
          </p>
          <button class="demo-button" (click)="onDemoButtonClick($event)">Try Me!</button>
        </div>
      </div>
    </div>
  `,
  styles: [`
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    .page-wrapper {
      font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      overflow: hidden;
      position: relative;
    }

    .page-wrapper.dark {
      background: linear-gradient(135deg, #0f0f23 0%, #1a1a2e 50%, #16213e 100%);
    }

    .bg-particles {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      overflow: hidden;
      z-index: 1;
    }

    .bg-particles ::ng-deep .particle {
      position: absolute;
      background: rgba(255, 255, 255, 0.1);
      border-radius: 50%;
      animation: float 20s infinite linear;
    }

    .page-wrapper.dark .bg-particles ::ng-deep .particle {
      background: rgba(255, 255, 255, 0.05);
    }

    @keyframes float {
      0% {
        transform: translateY(100vh) rotate(0deg);
        opacity: 0;
      }
      10% {
        opacity: 1;
      }
      90% {
        opacity: 1;
      }
      100% {
        transform: translateY(-100vh) rotate(360deg);
        opacity: 0;
      }
    }

    .container {
      text-align: center;
      z-index: 10;
      position: relative;
    }

    .title {
      font-size: 2.5rem;
      font-weight: 700;
      margin-bottom: 3rem;
      color: white;
      text-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
      opacity: 0;
      animation: fadeInUp 0.8s ease-out 0.2s forwards;
    }

    .page-wrapper.dark .title {
      color: #e2e8f0;
    }

    .theme-toggle {
      width: 50px;
      height: 50px;
      border-radius: 50%;
      background: rgba(255, 255, 255, 0.2);
      backdrop-filter: blur(20px);
      border: 2px solid rgba(255, 255, 255, 0.3);
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      margin: 0 auto 2rem;
      position: relative;
      transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
      box-shadow: 0 10px 40px rgba(0, 0, 0, 0.2);
      opacity: 0;
      animation: fadeInUp 0.8s ease-out 0.4s forwards;
    }

    .page-wrapper.dark .theme-toggle {
      background: rgba(30, 41, 59, 0.8);
      border-color: rgba(148, 163, 184, 0.3);
      box-shadow: 0 10px 40px rgba(0, 0, 0, 0.4);
    }

    .theme-toggle:hover {
      transform: scale(1.1) rotate(5deg);
      box-shadow: 0 15px 50px rgba(0, 0, 0, 0.3);
    }

    .theme-toggle:active {
      transform: scale(0.95);
    }

    .icon-container {
      position: relative;
      width: 24px;
      height: 24px;
    }

    .sun-icon {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%) scale(1);
      font-size: 20px;
      color: #FFA500;
      text-shadow: 0 0 20px rgba(255, 165, 0, 0.6);
      transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
      opacity: 1;
    }

    .moon-icon {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%) scale(0);
      font-size: 20px;
      color: #E2E8F0;
      text-shadow: 0 0 20px rgba(226, 232, 240, 0.5);
      transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
      opacity: 0;
    }

    .page-wrapper.dark .sun-icon {
      transform: translate(-50%, -50%) scale(0);
      opacity: 0;
    }

    .page-wrapper.dark .moon-icon {
      transform: translate(-50%, -50%) scale(1);
      opacity: 1;
    }

    .theme-label {
      font-size: 1.2rem;
      font-weight: 600;
      color: rgba(255, 255, 255, 0.9);
      text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
      margin-bottom: 2rem;
      transition: all 0.3s ease;
    }

    .page-wrapper.dark .theme-label {
      color: #cbd5e0;
    }

    .demo-card {
      background: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(20px);
      border: 1px solid rgba(255, 255, 255, 0.2);
      border-radius: 20px;
      padding: 2rem;
      max-width: 400px;
      margin: 0 auto;
      box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1);
      opacity: 0;
      animation: fadeInUp 0.8s ease-out 0.6s forwards;
      transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .page-wrapper.dark .demo-card {
      background: rgba(30, 41, 59, 0.4);
      border-color: rgba(148, 163, 184, 0.2);
      box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
    }

    .demo-text {
      font-size: 1rem;
      color: rgba(255, 255, 255, 0.9);
      line-height: 1.6;
      margin-bottom: 1rem;
    }

    .page-wrapper.dark .demo-text {
      color: #cbd5e0;
    }

    .demo-button {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      border: none;
      padding: 0.75rem 1.5rem;
      border-radius: 12px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
    }

    .page-wrapper.dark .demo-button {
      background: linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%);
      box-shadow: 0 4px 15px rgba(79, 70, 229, 0.4);
    }

    .demo-button:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 25px rgba(102, 126, 234, 0.6);
    }

    .page-wrapper.dark .demo-button:hover {
      box-shadow: 0 8px 25px rgba(79, 70, 229, 0.6);
    }

    @keyframes fadeInUp {
      from {
        opacity: 0;
        transform: translateY(30px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @media (max-width: 600px) {
      .title {
        font-size: 2rem;
      }
      
      .demo-card {
        margin: 0 1rem;
        padding: 1.5rem;
      }
    }

    ::ng-deep .ripple {
      position: absolute;
      border-radius: 50%;
      background: rgba(255, 255, 255, 0.4);
      animation: ripple-animation 0.6s ease-out;
      pointer-events: none;
    }

    .page-wrapper.dark ::ng-deep .ripple {
      background: rgba(100, 126, 234, 0.4);
    }

    @keyframes ripple-animation {
      0% {
        width: 0;
        height: 0;
        opacity: 1;
      }
      100% {
        width: 200px;
        height: 200px;
        opacity: 0;
      }
    }
  `]
})
export class ThemeToggleComponent implements OnInit {
  isDarkMode = false;

  ngOnInit() {
    this.createParticles();
  }

  toggleTheme(event: MouseEvent) {
    this.isDarkMode = !this.isDarkMode;
    this.createRipple(event);
    
    // Vibration effect for mobile
    if (navigator.vibrate) {
      navigator.vibrate(50);
    }
  }

  createRipple(event: MouseEvent) {
    const button = event.currentTarget as HTMLElement;
    const ripple = document.createElement('span');
    ripple.classList.add('ripple');
    
    const rect = button.getBoundingClientRect();
    
    ripple.style.width = '0px';
    ripple.style.height = '0px';
    ripple.style.left = '50%';
    ripple.style.top = '50%';
    ripple.style.transform = 'translate(-50%, -50%)';
    
    button.appendChild(ripple);
    
    setTimeout(() => {
      ripple.remove();
    }, 600);
  }

  createParticles() {
    const particlesContainer = document.querySelector('.bg-particles');
    if (!particlesContainer) return;
    
    const particleCount = 50;
    
    for (let i = 0; i < particleCount; i++) {
      const particle = document.createElement('div');
      particle.className = 'particle';
      
      const size = Math.random() * 4 + 1;
      particle.style.width = `${size}px`;
      particle.style.height = `${size}px`;
      particle.style.left = `${Math.random() * 100}%`;
      particle.style.animationDelay = `${Math.random() * 20}s`;
      particle.style.animationDuration = `${15 + Math.random() * 10}s`;
      
      particlesContainer.appendChild(particle);
    }
  }

  onDemoButtonClick(event: MouseEvent) {
    const button = event.currentTarget as HTMLElement;
    button.style.transform = 'scale(0.95)';
    setTimeout(() => {
      button.style.transform = 'translateY(-2px)';
    }, 100);
  }
}


// ==========================
// HOW TO USE IN YOUR ANGULAR APP
// ==========================

/*
1. Add Font Awesome to your index.html:
   <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

2. Import and use the component:
   import { ThemeToggleComponent } from './theme-toggle/theme-toggle.component';

3. Add to your app.component.ts imports (if standalone):
   imports: [ThemeToggleComponent]

4. Use in template:
   <app-theme-toggle></app-theme-toggle>

5. If you want to use it in app.component.html directly, make sure it's imported in app.component.ts
*/
