import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';

@Component({
  selector: 'app-chat',
  templateUrl: './chat.component.html',
  styleUrls: ['./chat.component.css']
})
export class ChatComponent implements OnChanges {
  @Input() chunk: string = '';

  htmlCode: string = '';
  cssCode: string = '';
  jsCode: string = '';
  otherCode: string = '';

  ngOnChanges(changes: SimpleChanges): void {
    if (changes['chunk'] && this.chunk) {
      this.processChunk(this.chunk);
    }
  }

  private processChunk(chunk: string): void {
    if (!chunk) return;

    // Normalize newlines
    let normalized = chunk.replace(/\\r\\n/g, '\n').replace(/\\n/g, '\n').replace(/\r/g, '');

    // Split by ``` to find code blocks
    const parts = normalized.split('```');

    for (let i = 0; i < parts.length; i++) {
      const part = parts[i];
      if (i % 2 === 1) {
        // Odd index -> inside a code block
        const lines = part.split('\n');
        const firstLine = lines[0].trim().toLowerCase();

        // Determine language
        let lang: string;
        if (firstLine === 'html') lang = 'html';
        else if (firstLine === 'css') lang = 'css';
        else if (firstLine === 'js' || firstLine === 'javascript') lang = 'js';
        else lang = 'other';

        // Remove the language line if it was there
        const content = (lang !== 'other' ? lines.slice(1).join('\n') : part);

        this.appendToLanguageBucket(lang, content);
      }
      // Even index -> normal text outside code block, ignore
    }
  }

  private appendToLanguageBucket(lang: string, content: string) {
    if (!content) return;

    switch (lang) {
      case 'html':
        this.htmlCode += content;
        break;
      case 'css':
        this.cssCode += content;
        break;
      case 'js':
        this.jsCode += content;
        break;
      default:
        this.otherCode += content;
        break;
    }
  }
}
