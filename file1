import React, { useState } from 'react';
import styles from './ChatImageStrip.module.css';
import ImageGalleryPreview from './ImageGalleryPreview';

const ChatImageStrip = ({ images = [] }) => {
  const [selectedImage, setSelectedImage] = useState(null);

  const visibleImages = images.slice(0, 4);
  const extraCount = images.length - 4;

  const handleImageClick = (img) => {
    setSelectedImage(img);
  };

  return (
    <div className={styles.container}>
      <div className={styles.grid}>
        {visibleImages.map((img, index) => (
          <img
            key={index}
            src={`data:image/*;base64,${img.base64Image}`}
            alt={img.fileName}
            className={styles.image}
            onClick={() => handleImageClick(img)}
          />
        ))}

        {extraCount > 0 && (
          <div className={styles.overlayContainer}>
            <ImageGalleryPreview images={images} />
          </div>
        )}
      </div>

      {selectedImage && (
        <div className={styles.individualModal}>
          <img
            src={`data:image/*;base64,${selectedImage.base64Image}`}
            alt={selectedImage.fileName}
            className={styles.fullImage}
            onClick={() => setSelectedImage(null)}
          />
        </div>
      )}
    </div>
  );
};

export default ChatImageStrip;





.container {
  position: relative;
  width: fit-content;
  margin: 1rem auto;
}

.grid {
  display: grid;
  grid-template-columns: repeat(2, 120px);
  grid-template-rows: repeat(2, 120px);
  gap: 10px;
  position: relative;
}

.image {
  width: 120px;
  height: 120px;
  object-fit: cover;
  border-radius: 6px;
  cursor: pointer;
  background-color: #1f1f1f;
  transition: transform 0.2s ease;
}

.image:hover {
  transform: scale(1.05);
}

.overlayContainer {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.moreButton {
  background: linear-gradient(45deg, #007bff, #00c6ff);
  color: white;
  border: none;
  padding: 6px 14px;
  border-radius: 20px;
  font-weight: 500;
  cursor: pointer;
}

.moreButton:hover {
  background: linear-gradient(45deg, #005ecb, #00b5e0);
}

.individualModal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(10, 10, 10, 0.8);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1100;
}

.fullImage {
  max-width: 90vw;
  max-height: 80vh;
  object-fit: contain;
  border-radius: 8px;
  cursor: zoom-out;
}
