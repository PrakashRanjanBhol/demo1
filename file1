import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';

@Component({
  selector: 'app-chat',
  templateUrl: './chat.component.html',
  styleUrls: ['./chat.component.css']
})
export class ChatComponent implements OnChanges {
  @Input() chunk: string = '';

  htmlCode: string = '';
  cssCode: string = '';
  jsCode: string = '';
  otherCode: string = '';

  ngOnChanges(changes: SimpleChanges): void {
    if (changes['chunk'] && this.chunk) {
      this.processChunk(this.chunk);
    }
  }

  private processChunk(chunk: string): void {
    if (!chunk) return;

    const normalized = chunk.replace(/\\r\\n/g, '\n').replace(/\\n/g, '\n').replace(/\r/g, '');

    // Split by ``` to find code blocks
    const parts = normalized.split('```');

    for (let i = 1; i < parts.length; i += 2) {
      const block = parts[i];
      const lines = block.split('\n');

      // Determine language: check first line, if empty, check second line
      let langToken = lines[0].trim().toLowerCase();
      let contentStartIndex = 1;

      if (!langToken) {
        // first line empty, take second line as language
        langToken = lines[1]?.trim().toLowerCase() || 'other';
        contentStartIndex = 2;
      }

      let lang: string;
      if (langToken === 'html') lang = 'html';
      else if (langToken === 'css') lang = 'css';
      else if (langToken === 'js' || langToken === 'javascript') lang = 'js';
      else {
        lang = 'other';
        contentStartIndex = 0; // keep first line as content
      }

      const content = lines.slice(contentStartIndex).join('\n');
      this.appendToLanguageBucket(lang, content);
    }
  }

  private appendToLanguageBucket(lang: string, content: string) {
    if (!content) return;

    switch (lang) {
      case 'html':
        this.htmlCode += content;
        break;
      case 'css':
        this.cssCode += content;
        break;
      case 'js':
        this.jsCode += content;
        break;
      default:
        this.otherCode += content;
        break;
    }
  }
}
